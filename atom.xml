<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Web学习博客</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-03-29T07:09:06.056Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zhang Quan yu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/29/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80/%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80%E4%B9%8Bgrid/"/>
    <id>http://yoursite.com/2019/03/29/页面布局/三栏布局/三栏布局之grid/</id>
    <published>2019-03-29T07:07:11.576Z</published>
    <updated>2019-03-29T07:09:06.056Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html lang="en" dir="ltr">  <head><meta name="generator" content="Hexo 3.8.0">    <meta charset="utf-8">    <title>三栏布局之grid</title>    <style>      body,p{margin: 0;}      .top,.bottom{height: 30px;}      .middle{display:grid;grid-template-columns:100px 1fr 100px;grid-gap:20px;}      .main{grid-area:1/2/2/3;}</style>  <link rel="stylesheet" href="/css/prism-tomorrow.css" type="text/css"><link rel="stylesheet" href="/css/prism-line-numbers.css" type="text/css"></head>  <body>    <div class="parent" id="parent" style="background-color: lightgrey;">    <div class="top" style="background-color: lightblue;">        <p>top</p>    </div>    <div class="middle" style="background-color: pink;">        <div class="main" style="background-color: lightcoral;">            <p>main</p>            <p>main</p>        </div>        <div class="left" style="background-color: lightseagreen;">            <p>left</p>        </div>        <div class="right" style="background-color: lightcyan;">               <p>right</p>        </div>    </div>    <div class="bottom" style="background-color: lightgreen;">        <p>bottom</p>    </div></div>  </body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
  &lt;head&gt;&lt;meta name=&quot;generator&quot; content=&quot;Hexo 3.8.0&quot;&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;title&gt;三栏布局之g
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/29/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80/%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80%E4%B9%8Bflex/"/>
    <id>http://yoursite.com/2019/03/29/页面布局/三栏布局/三栏布局之flex/</id>
    <published>2019-03-29T07:04:31.328Z</published>
    <updated>2019-03-29T07:05:44.418Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html lang="en" dir="ltr">  <head><meta name="generator" content="Hexo 3.8.0">    <meta charset="utf-8">    <title>三栏布局之flex</title>    <style>      body,p{margin: 0;}      .top,.bottom{height: 30px;}      .middle{display: flex;}      .left,.right{width: 100px;}      .right{order: 2;}      .main{        order: 1;        flex: 1;        margin: 0 20px;      }</style>  <link rel="stylesheet" href="/css/prism-tomorrow.css" type="text/css"><link rel="stylesheet" href="/css/prism-line-numbers.css" type="text/css"></head>  <body>    <div class="parent" id="parent" style="background-color: lightgrey;">    <div class="top" style="background-color: lightblue;">        <p>top</p>    </div>    <div class="middle" style="background-color: pink;">        <div class="main" style="background-color: lightcoral;">            <p>main</p>            <p>main</p>        </div>        <div class="left" style="background-color: lightseagreen;">            <p>left</p>        </div>        <div class="right" style="background-color: lightcyan;">               <p>right</p>        </div>    </div>    <div class="bottom" style="background-color: lightgreen;">        <p>bottom</p>    </div></div>  </body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
  &lt;head&gt;&lt;meta name=&quot;generator&quot; content=&quot;Hexo 3.8.0&quot;&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;title&gt;三栏布局之f
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/29/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80/%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80%E4%B9%8Babsolute/"/>
    <id>http://yoursite.com/2019/03/29/页面布局/三栏布局/三栏布局之absolute/</id>
    <published>2019-03-29T07:01:12.233Z</published>
    <updated>2019-03-29T07:05:08.149Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html lang="en" dir="ltr">  <head><meta name="generator" content="Hexo 3.8.0">    <meta charset="utf-8">    <title>三栏布局之absolute</title>    <style>      body,p{margin: 0;}      .top,.bottom{height: 30px;}      .middle{        position: relative;        height: 40px;      }      .left,.right,.main{        position: absolute;        top: 0;        bottom: 0;      }      .left{width: 100px;}      .right{        width: 100px;        right: 0;      }      .main{        left: 120px;        right: 120px;      }    </style>  <link rel="stylesheet" href="/css/prism-tomorrow.css" type="text/css"><link rel="stylesheet" href="/css/prism-line-numbers.css" type="text/css"></head>  <body>    <div class="parent" id="parent" style="background-color: lightgrey;">    <div class="top" style="background-color: lightblue;">        <p>top</p>    </div>    <div class="middle" style="background-color: pink;">        <div class="main" style="background-color: lightcoral;">            <p>main</p>            <p>main</p>        </div>        <div class="left" style="background-color: lightseagreen;">            <p>left</p>        </div>        <div class="right" style="background-color: lightcyan;">               <p>right</p>        </div>    </div>    <div class="bottom" style="background-color: lightgreen;">        <p>bottom</p>    </div>    </div>  </body></html>#flexflex中的伸缩项目默认都拉伸为父元素的高度，可实现等高效果。通过改变伸缩项目的order，可以实现元素顺序调换的效果　　缺点: 兼容性不高]]></content>
    
    <summary type="html">
    
      
      
        &lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
  &lt;head&gt;&lt;meta name=&quot;generator&quot; content=&quot;Hexo 3.8.0&quot;&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;title&gt;三栏布局之a
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/29/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80/%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80%E4%B9%8Bfloat+box%20sizong+background-clip/"/>
    <id>http://yoursite.com/2019/03/29/页面布局/三栏布局/三栏布局之float+box sizong+background-clip/</id>
    <published>2019-03-29T06:54:31.748Z</published>
    <updated>2019-03-29T06:58:39.630Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html lang="en" dir="ltr">  <head><meta name="generator" content="Hexo 3.8.0">    <meta charset="utf-8">    <title>三栏布局之float + box-sizing + background-clip</title>    <style>      body,p{        margin: 0;      }      .top,.bottom{        height: 30px;      }      .middle{        overflow: hidden;      }      .main{        float: left;        width: 100%;        border-left: 100px solid lightgrey;        border-right: 100px solid lightgrey;        padding: 0 20px;        background-clip: content-box;        box-sizing: border-box;    }    .left,.right{      float: left;      width: 100px;    }    .left{      margin-left: -100%;    }    .right{      margin-left: -100px;    }    </style>  <link rel="stylesheet" href="/css/prism-tomorrow.css" type="text/css"><link rel="stylesheet" href="/css/prism-line-numbers.css" type="text/css"></head>  <body>    <div class="parent" id="parent" style="background-color: lightgrey;">    <div class="top" style="background-color: lightblue;">        <p>top</p>    </div>    <div class="middle" style="background-color: pink;">        <div class="main" style="background-color: lightcoral;">            <p>main</p>            <p>main</p>        </div>        <div class="left">            <p>left</p>        </div>        <div class="right">               <p>right</p>        </div>    </div>    <div class="bottom" style="background-color: lightgreen;">        <p>bottom</p>    </div></div>  </body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
  &lt;head&gt;&lt;meta name=&quot;generator&quot; content=&quot;Hexo 3.8.0&quot;&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;title&gt;三栏布局之f
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/29/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2019/03/29/页面布局/三栏布局/</id>
    <published>2019-03-29T05:51:11.707Z</published>
    <updated>2019-03-29T07:14:17.505Z</updated>
    
    <content type="html"><![CDATA[<p>#圣杯布局<br>布局要求：</p><ul><li>三列布局，中间宽度自适应，两边定宽</li><li>中间栏要在浏览器中优先展示渲染</li><li>允许任意列的高度最高</li></ul><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>left<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>footer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>因为需要中间栏优先展示渲染，所以中间的main在HTML的结构中却是最靠前的。在实际的网站中这样做的好处就是用户能够先看到网页正文信息，一般网页两边的导航信息和说明信息我们认为优先级没有正文重要。</p><ol><li>设置基本样式<pre class="line-numbers language-css"><code class="language-css"><span class="token selector">*</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">body</span><span class="token punctuation">{</span><span class="token property">min-width</span><span class="token punctuation">:</span><span class="token number">700</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.header</span>,<span class="token class">.footer</span></span><span class="token punctuation">{</span><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">1</span>px solid <span class="token hexcode">#333</span><span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span><span class="token hexcode">#aaa</span><span class="token punctuation">;</span><span class="token property">text-align</span><span class="token punctuation">:</span>center<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.left</span>,<span class="token class">.main</span>,<span class="token class">.right</span></span><span class="token punctuation">{</span><span class="token property">min-height</span><span class="token punctuation">:</span><span class="token number">130</span>px<span class="token punctuation">;</span><span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.container</span></span><span class="token punctuation">{</span><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">2</span>px solid yellow<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.left</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">200</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.right</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span><span class="token number">220</span>px<span class="token punctuation">;</span><span class="token property">background</span><span class="token punctuation">:</span>green<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.main</span></span><span class="token punctuation">{</span><span class="token property">background</span><span class="token punctuation">:</span>blue<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>为了高度保持一致给left middle right都加上min-height:130px</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144149281-1239869596.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><ol start="2"><li>将主体部分的三个子元素都设置左浮动<pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.left</span>,<span class="token class">.main</span>,<span class="token class">.right</span></span><span class="token punctuation">{</span><span class="token property">float</span><span class="token punctuation">:</span>left<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144219084-985186133.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol><p>我们看一下上面的效果比较明显的两个问题，一是footer跑到上面去了，二是container容器高度塌陷了，这是典型的“清除浮动和闭合浮动”问题。</p><ol start="3"><li>解决浮动问题<pre class="line-numbers language-css"><code class="language-css"><span class="token selector"><span class="token class">.container</span></span><span class="token punctuation">{</span><span class="token property">border</span><span class="token punctuation">:</span><span class="token number">2</span>px solid yellow<span class="token punctuation">;</span><span class="token property">overflow</span><span class="token punctuation">:</span>hidden<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector"><span class="token class">.footer</span></span><span class="token punctuation">{</span><span class="token property">clear</span><span class="token punctuation">:</span>both<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>给container加上overflow:hidden触发BFC闭合浮动，给footer加上clear属性清除浮动。<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144232920-1725102262.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol><p>我们发现footer移到了下面，并且container的高度塌陷也修复了。</p><ol start="4"><li>设置main宽度为width:100%,让其独占满一行<br>.main{<br>width:100%;<br>background:blue;<br>}</li></ol><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144244328-1499488747.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><ol start="5"><li>设置left和right负的外边距<br>我们的目标是让left、main、right依次并排，但是上图中left和right都是位于下一行，这里的技巧就是使用负的margin-left:<pre><code>.left{margin-left:-100%;width:200px;background:red;}.right{margin-left:-220px;width:220px;background:green;}</code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144255457-752500337.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol><p>负的margin-left会让元素沿文档流向左移动，如果负的数值比较大就会一直移动到上一行。关于负的margin的应用也是博大精深，这里肯定是不能详细介绍了。<br>设置left部分的margin-left为-100%,就会使left向左移动一整个行的宽度，由于left左边是父元素的边框，所以left继续跳到上一行左移，一直移动到上一行的开头，并覆盖了main部分（仔细观察下图，你会发现main里面的字“main”不见了，因为被left遮住了），left上移过后，right就会处于上一行的开头位置，这是再设置right部分margin-left为负的宽度，right就会左移到上一行的末尾。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144317876-696975568.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><ol start="6"><li>修复覆盖问题<br>第五步我们说过设置left和right负的外边距覆盖了main部分的内容，现在想办法修复这个问题，首先给container的左右加上一个内边距，分别为left和right的宽度。<pre><code>.container{border:2px solid yellow;padding:0 220px 0 200px;overflow:hidden;}</code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144326803-1561906906.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol><p>由于left、main、right三个部分都被container包裹着，所以给其添加内边距，三个子元素会往中间挤。貌似还是没有修复问题，别着急，我们已经在container的左右两边留下了相应宽度的留白，只要把left和right分别移动到这两个留白就可以了。可以使用相对定位移动left和right部分，</p><pre><code>.left,.main,.right{  position:relative;  float:left;  min-height:130px;}.left{  margin-left:-100%;  left:-200px;  width:200px;  background:red;}.right{  margin-left:-220px;  right:-220px;  width:220px;  background:green;}</code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144337972-347921484.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>至此，我们完成了三列中间自适应的布局，也就是传说中的圣杯布局。完整的代码如下：</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;title&gt;圣杯布局&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        *{margin: 0;padding: 0;}        body{min-width: 700px;}        .header,        .footer{            border: 1px solid #333;            background: #aaa;            text-align: center;        }        .left,        .main,        .right{            position: relative;            float: left;            min-height: 130px;        }        .container{            border: 2px solid yellow;            padding:0 220px 0 200px;            overflow: hidden;        }        .left{            margin-left: -100%;            left: -200px;            width: 200px;            background: red;        }        .right{            margin-left: -220px;            right: -220px;            width: 220px;            background: green;        }        .main{            width: 100%;            background: blue;        }        .footer{            clear: both;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;header&quot;&gt;header&lt;/div&gt;    &lt;div class=&quot;container&quot;&gt;        &lt;div class=&quot;main&quot;&gt;main&lt;/div&gt;        &lt;div class=&quot;left&quot;&gt;left&lt;/div&gt;        &lt;div class=&quot;right&quot;&gt;right&lt;/div&gt;    &lt;/div&gt;    &lt;div class=&quot;footer&quot;&gt;footer&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>#双飞翼布局</p><p>圣杯布局和双飞翼布局解决问题的方案在前一半是相同的，也就是三栏全部float浮动，但左右两栏加上负margin让其跟中间栏div并排，以形成三栏布局。不同在于解决”中间栏div内容不被遮挡“问题的思路不一样。</p><ol><li>HTML结构<pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>left<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>footer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144350342-1626994376.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></li></ol><p>双飞翼布局的前五步和圣杯布局完全相同，我们只需要修改第六步，前面是设置container的内边距以及相对定位来解决这个覆盖问题的，双飞翼布局中，为了main内容不被遮挡，在main里面添加一个子元素content来显示内容，然后设置content的margin-left和margin-right为左右两栏div留出位置。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>圣杯布局<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">*</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector">body</span><span class="token punctuation">{</span><span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token number">700</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.header</span>,        <span class="token class">.footer</span></span><span class="token punctuation">{</span>            <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#333</span><span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#aaa</span><span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.left</span>,        <span class="token class">.main</span>,        <span class="token class">.right</span></span><span class="token punctuation">{</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token number">130</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.container</span></span><span class="token punctuation">{</span>            <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">2</span>px solid yellow<span class="token punctuation">;</span>            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.left</span></span><span class="token punctuation">{</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.right</span></span><span class="token punctuation">{</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">220</span>px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">220</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.main</span></span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.content</span></span><span class="token punctuation">{</span>            <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">220</span>px <span class="token number">0</span> <span class="token number">200</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.footer</span></span><span class="token punctuation">{</span>            <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>content<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>left<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>footer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>双飞翼布局比圣杯布局多使用了1个div，少用大致4个css属性（圣杯布局container的 padding-left和padding-right这2个属性，加上左右两个div用相对布局position: relative及对应的right和left共4个属性，；而双飞翼布局子div里用margin-left和margin-right共2个属性，比圣杯布局思路更直接和简洁一点。简单说起来就是”双飞翼布局比圣杯布局多创建了一个div，但不用相对布局了。</p><p>##圣杯布局和双飞翼布局的作用和区别</p><ol><li><p>圣杯布局和双飞翼布局解决的问题是一样的，就是两边顶宽，中间自适应的三栏布局，中间栏要在放在文档流前面以优先渲染。</p></li><li><p>圣杯布局和双飞翼布局解决问题的方案在前一半是相同的，也就是三栏全部float浮动，但左右两栏加上负margin让其跟中间栏div并排，以形成三栏布局。</p></li><li><p>不同在于解决”中间栏div内容不被遮挡“问题的思路不一样：<br>圣杯布局，为了中间div内容不被遮挡，将中间div设置了左右padding-left和padding-right后，将左右两个div用相对布局position: relative并分别配合right和left属性，以便左右两栏div移动后不遮挡中间div。</p></li><li><p>双飞翼布局，为了中间div内容不被遮挡，直接在中间div内部创建子div用于放置内容，在该子div里用margin-left和margin-right为左右两栏div留出位置。<br>多了1个div，少用大致4个css属性（圣杯布局中间divpadding-left和padding-right这2个属性，加上左右两个div用相对布局position: relative及对应的right和left共4个属性，一共6个；而双飞翼布局子div里用margin-left和margin-right共2个属性，6-2=4），个人感觉比圣杯布局思路更直接和简洁一点。</p></li></ol><p>简单说起来就是”双飞翼布局比圣杯布局多创建了一个div，但不用相对布局了“，而不是你题目中说的”去掉relative”就是双飞翼布局“。<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144411449-91607792.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>#float+box-sizing+background-clip<br>.main元素的border区域为两侧定宽列的所在区域，实现伪等高效果；设置.main的padding和background-clip来实现元素间隔。两侧元素通过负margin调整到.main元素的border区域</p><p>　　缺点: 兼容性不好</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name">dir</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ltr<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>三栏布局之float + box-sizing + background-clip<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">      <span class="token selector">body,p</span><span class="token punctuation">{</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.top</span>,<span class="token class">.bottom</span></span><span class="token punctuation">{</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.middle</span></span><span class="token punctuation">{</span>        <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.main</span></span><span class="token punctuation">{</span>        <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>        <span class="token property">border-left</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid lightgrey<span class="token punctuation">;</span>        <span class="token property">border-right</span><span class="token punctuation">:</span> <span class="token number">100</span>px solid lightgrey<span class="token punctuation">;</span>        <span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">20</span>px<span class="token punctuation">;</span>        <span class="token property">background-clip</span><span class="token punctuation">:</span> content-box<span class="token punctuation">;</span>        <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.left</span>,<span class="token class">.right</span></span><span class="token punctuation">{</span>      <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>      <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.left</span></span><span class="token punctuation">{</span>      <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">100%</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token selector"><span class="token class">.right</span></span><span class="token punctuation">{</span>      <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">100</span>px<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightgrey<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>top<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightcoral<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>left<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightgreen<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>bottom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329151226119-224048125.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>#absolute<br>设置子元素的top:0;bottom:0;使得所有子元素的高度都和父元素的高度相同，实现等高效果</p><p>　　缺点: 需要为.middle元素设置高度，扩展性较差</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name">dir</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ltr<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>三栏布局之absolute<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">      <span class="token selector">body,p</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.top</span>,<span class="token class">.bottom</span></span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.middle</span></span><span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>        <span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">40</span>px<span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.left</span>,<span class="token class">.right</span>,<span class="token class">.main</span></span><span class="token punctuation">{</span>        <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>        <span class="token property">top</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token property">bottom</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.left</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.right</span></span><span class="token punctuation">{</span>        <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.main</span></span><span class="token punctuation">{</span>        <span class="token property">left</span><span class="token punctuation">:</span> <span class="token number">120</span>px<span class="token punctuation">;</span>        <span class="token property">right</span><span class="token punctuation">:</span> <span class="token number">120</span>px<span class="token punctuation">;</span>      <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightgrey<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>top<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightcoral<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightseagreen<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>left<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightcyan<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightgreen<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>bottom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329151304860-985981928.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>#flex<br>flex中的伸缩项目默认都拉伸为父元素的高度，可实现等高效果。通过改变伸缩项目的order，可以实现元素顺序调换的效果</p><p>　　缺点: 兼容性不高</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name">dir</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ltr<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>三栏布局之flex<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">      <span class="token selector">body,p</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.top</span>,<span class="token class">.bottom</span></span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.middle</span></span><span class="token punctuation">{</span><span class="token property">display</span><span class="token punctuation">:</span> flex<span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.left</span>,<span class="token class">.right</span></span><span class="token punctuation">{</span><span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.right</span></span><span class="token punctuation">{</span><span class="token property">order</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.main</span></span><span class="token punctuation">{</span>        <span class="token property">order</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token property">flex</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span> <span class="token number">20</span>px<span class="token punctuation">;</span>      <span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightgrey<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>top<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightcoral<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightseagreen<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>left<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightcyan<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightgreen<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>bottom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329151320818-62060917.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>#grid</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>en<span class="token punctuation">"</span></span> <span class="token attr-name">dir</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ltr<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>三栏布局之grid<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span><span class="token punctuation">></span></span><span class="token style language-css">      <span class="token selector">body,p</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.top</span>,<span class="token class">.bottom</span></span><span class="token punctuation">{</span><span class="token property">height</span><span class="token punctuation">:</span> <span class="token number">30</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.middle</span></span><span class="token punctuation">{</span><span class="token property">display</span><span class="token punctuation">:</span>grid<span class="token punctuation">;</span><span class="token property">grid-template-columns</span><span class="token punctuation">:</span><span class="token number">100</span>px <span class="token number">1</span>fr <span class="token number">100</span>px<span class="token punctuation">;</span><span class="token property">grid-gap</span><span class="token punctuation">:</span><span class="token number">20</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>      <span class="token selector"><span class="token class">.main</span></span><span class="token punctuation">{</span><span class="token property">grid-area</span><span class="token punctuation">:</span><span class="token number">1</span>/<span class="token number">2</span>/<span class="token number">2</span>/<span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">}</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>parent<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightgrey<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>top<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightblue<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>top<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>middle<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> pink<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightcoral<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightseagreen<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>left<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightcyan<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>               <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>bottom<span class="token punctuation">"</span></span><span class="token style-attr language-css"><span class="token attr-name"> <span class="token attr-name">style</span></span><span class="token punctuation">="</span><span class="token attr-value"><span class="token property">background-color</span><span class="token punctuation">:</span> lightgreen<span class="token punctuation">;</span></span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>bottom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329151339646-1512563042.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>总结</p><p>　　由于限定了主要内容元素在html结构中位于前面，通过css样式改变将其位置调换到中间的前提，所以思路并不是很多。float浮动流的元素可以通过负margin调换位置；absolute绝对定位流的元素可以通过偏移属性调换位置；flex弹性盒模型可以通过order属性调换位置；grid通过grid-area调换位置。而处于正常流中的元素除了使用relative外，使用负margin是无法调换位置的，所以table、inline-block等布局方式在此前提下不是很实用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#圣杯布局&lt;br&gt;布局要求：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;三列布局，中间宽度自适应，两边定宽&lt;/li&gt;
&lt;li&gt;中间栏要在浏览器中优先展示渲染&lt;/li&gt;
&lt;li&gt;允许任意列的高度最高&lt;/li&gt;
&lt;/ul&gt;
&lt;pre class=&quot;line-numbers language-h
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/29/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/%E4%B8%89%E6%A0%8F%E5%B8%83%E5%B1%80/2.1%E5%9C%A3%E6%9D%AF%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2019/03/29/页面布局/三栏布局/2.1圣杯布局/</id>
    <published>2019-03-29T03:04:34.300Z</published>
    <updated>2019-03-29T05:50:49.766Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html><head><meta name="generator" content="Hexo 3.8.0">    <meta charset="utf-8">    <title>圣杯布局</title>    <style type="text/css">        *{margin: 0;padding: 0;}        body{min-width: 700px;}        .header,        .footer{            border: 1px solid #333;            background: #aaa;            text-align: center;        }        .left,        .main,        .right{            position: relative;            float: left;            min-height: 130px;        }        .container{            border: 2px solid yellow;            padding:0 220px 0 200px;            overflow: hidden;        }        .left{            margin-left: -100%;            left: -200px;            width: 200px;            background: red;        }        .right{            margin-left: -220px;            right: -220px;            width: 220px;            background: green;        }        .main{            width: 100%;            background: blue;        }        .footer{            clear: both;        }    </style><link rel="stylesheet" href="/css/prism-tomorrow.css" type="text/css"><link rel="stylesheet" href="/css/prism-line-numbers.css" type="text/css"></head><body>    <div class="header">header</div>    <div class="container">        <div class="main">main</div>        <div class="left">left</div>        <div class="right">right</div>    </div>    <div class="footer">footer</div></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;&lt;meta name=&quot;generator&quot; content=&quot;Hexo 3.8.0&quot;&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;title&gt;圣杯布局&lt;/title&gt;
    &lt;style type
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/29/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80demo/1.4%E5%8E%BB%E9%99%A4%E5%88%97%E8%A1%A8%E6%9C%80%E5%90%8E%E4%B8%80%E4%B8%AAli%E5%85%83%E7%B4%A0%E7%9A%84border-bottom/"/>
    <id>http://yoursite.com/2019/03/29/页面布局/页面布局demo/1.4去除列表最后一个li元素的border-bottom/</id>
    <published>2019-03-29T02:49:28.360Z</published>
    <updated>2019-03-29T02:59:48.832Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html lang="en" dir="ltr">  <head><meta name="generator" content="Hexo 3.8.0">    <meta charset="utf-8">    <title>1.4去除列表最后一个li元素的border-bottom</title>    <style>      *{        margin:0;        padding:0;      }      .div{        width:200px;        border:5px solid red;        margin:20px 0 0 20px;      }      .div ul li{        list-style-type:none;        height:26px;        line-height:26px;        border-bottom:1px dashed lightblue;      }      /*方式一：      .div ul li.lastLi{        margin-bottom:-1px;      }*/      .div ul{        overflow:hidden;      }    </style>  <link rel="stylesheet" href="/css/prism-tomorrow.css" type="text/css"><link rel="stylesheet" href="/css/prism-line-numbers.css" type="text/css"></head>  <body>    <div class="div">      <ul>        <li>Item A</li>        <li>Item B</li>        <li>Item C</li>        <li>Item D</li>        <li class="lastLi">Item E</li>      </ul>    </div>  </body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
  &lt;head&gt;&lt;meta name=&quot;generator&quot; content=&quot;Hexo 3.8.0&quot;&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;title&gt;1.4去除列
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/29/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80demo/1.3%E8%B4%9F%E8%BE%B9%E8%B7%9D%E5%8A%A0%E5%AE%9A%E4%BD%8D%E5%AE%9E%E7%8E%B0%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/"/>
    <id>http://yoursite.com/2019/03/29/页面布局/页面布局demo/1.3负边距加定位实现水平垂直居中/</id>
    <published>2019-03-29T02:31:27.463Z</published>
    <updated>2019-03-29T02:47:56.056Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html lang="en" dir="ltr">  <head><meta name="generator" content="Hexo 3.8.0">    <meta charset="utf-8">    <title>负边距加定位实现水平垂直居中</title>    <style>      .div1{        width:200px;        height:200px;        position:relative;        border: 1px solid red;      }      .div2{        width:100px;        height:100px;        background:pink;        position: absolute;        /*left/top:子盒子相对父盒子的一半，此时在右下角*/  left: 50%;  top:50%;        /*transform：相对自身元素走自己盒子的一半*/  transform: translate(-50%,-50%);      }    </style>  <link rel="stylesheet" href="/css/prism-tomorrow.css" type="text/css"><link rel="stylesheet" href="/css/prism-line-numbers.css" type="text/css"></head>  <body>    <div class="div1">      <div class="div2">      </div>    </div>  </body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
  &lt;head&gt;&lt;meta name=&quot;generator&quot; content=&quot;Hexo 3.8.0&quot;&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;title&gt;负边距加定位
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/29/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80demo/1.2%E5%8E%BB%E9%99%A4%E5%88%97%E8%A1%A8%E5%8F%B3%E8%BE%B9%E6%A1%86/"/>
    <id>http://yoursite.com/2019/03/29/页面布局/页面布局demo/1.2去除列表右边框/</id>
    <published>2019-03-29T02:15:12.594Z</published>
    <updated>2019-03-29T02:30:04.200Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html lang="en" dir="ltr">  <head><meta name="generator" content="Hexo 3.8.0">    <meta charset="utf-8">    <title>去除列表右边框</title>    <style media="screen">      *{        margin:0;        padding:0;      }      .div1{        width:780px;        height:380px;        margin:0 auto;        border:3px solid skyblue;        overflow:hidden;        margin-top:10px;      }      .div1 ul{        margin-right:-20px;      }      .div1 ul li{        list-style-type:none;        width:180px;        height:180px;        margin:0 20px 20px 0;        float:left;        background:pink;      }    </style>  <link rel="stylesheet" href="/css/prism-tomorrow.css" type="text/css"><link rel="stylesheet" href="/css/prism-line-numbers.css" type="text/css"></head>  <body>    <div class="div1">      <ul>        <li></li>        <li></li>        <li></li>        <li></li>        <li></li>        <li></li>        <li></li>        <li></li>      </ul>    </div>  </body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
  &lt;head&gt;&lt;meta name=&quot;generator&quot; content=&quot;Hexo 3.8.0&quot;&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;title&gt;去除列表右边
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/29/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80demo/1.1%E8%B4%9F%E8%BE%B9%E8%B7%9D/"/>
    <id>http://yoursite.com/2019/03/29/页面布局/页面布局demo/1.1负边距/</id>
    <published>2019-03-29T02:01:32.072Z</published>
    <updated>2019-03-29T02:16:28.229Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html lang="en" dir="ltr">  <head><meta name="generator" content="Hexo 3.8.0">    <meta charset="utf-8">    <title>负边距--向上移动</title>    <style>      *{        margin:0;        padding:0;      }      .div{        width:100%;        height:200px;      }      .div1{        height:100px;        background:lightblue;        width:100%;        float:left;      }      .div2{        height:100px;        background:pink;        width:30%;        float:left;        /*margin-left:-29%;*/        /*margin-left:-30%;*/        margin-left:-100%;      }    </style>  <link rel="stylesheet" href="/css/prism-tomorrow.css" type="text/css"><link rel="stylesheet" href="/css/prism-line-numbers.css" type="text/css"></head>  <body>    <div class="div1">      div1    </div>    <div class="div2">      div2    </div>  </body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;
  &lt;head&gt;&lt;meta name=&quot;generator&quot; content=&quot;Hexo 3.8.0&quot;&gt;
    &lt;meta charset=&quot;utf-8&quot;&gt;
    &lt;title&gt;负边距--向
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/29/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/%E9%A1%B5%E9%9D%A2%E5%B8%83%E5%B1%80/"/>
    <id>http://yoursite.com/2019/03/29/页面布局/页面布局/</id>
    <published>2019-03-29T01:45:09.835Z</published>
    <updated>2019-03-29T08:32:09.118Z</updated>
    
    <content type="html"><![CDATA[<p>@[页面布局]</p><h1 id="1-负边距与浮动布局"><a href="#1-负边距与浮动布局" class="headerlink" title="1.负边距与浮动布局"></a>1.负边距与浮动布局</h1><h2 id="1-1负边距"><a href="#1-1负边距" class="headerlink" title="1.1负边距"></a>1.1负边距</h2><p>所谓的负边距就是margin取负值的情况，如margin:-100px，margin:-100%。当一个元素与另一个元素margin取负值时将拉近距离。常见的功能如下：<br><strong>向上移动</strong><br>当多个元素同时从标准流中脱离开来时，如果前一个元素的宽度为100%宽度，后面的元素通过负边距可以实现上移。当负的边距超过自身的宽度将上移，只要没有超过自身宽度就不会上移。<br>margin-left:-30%时运行效果：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329143954152-309775497.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><br>margin-left:-100%时运行效果：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144030334-1452844849.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><br>margin-left:-29%时运行效果：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144040480-996241590.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><strong>去除列表有边框</strong><br>下面的效果中右边多出了20px的距离，底下多出20px空白：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144050361-155733320.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p>解决：<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144110823-1523254655.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><strong>负边距+定位实现水平垂直居中</strong></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144120808-294362983.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p><strong>去除列表最后一个li元素的border-bottom</strong></p><p>底部最后1px问题：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144129648-2019075128.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>解决：</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190329144138347-656120330.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><h1 id="2-三栏式布局"><a href="#2-三栏式布局" class="headerlink" title="2.三栏式布局"></a>2.三栏式布局</h1><h2 id="2-1-圣杯布局"><a href="#2-1-圣杯布局" class="headerlink" title="2.1 圣杯布局"></a>2.1 圣杯布局</h2><p>布局要求：</p><ol><li>三列布局，中间宽度自适应，两边定宽；</li><li>中间栏要在浏览器中优先展示渲染；</li><li>允许任意列的高度最高；</li><li>要求只用一个额外的DIV标签；</li><li>要求用最简单的CSS、最少的HACK语句；<br>详情见另一篇博客《三栏布局》</li></ol><p>附上代码:</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>圣杯布局<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>style</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>text/css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token style language-css">        <span class="token selector">*</span><span class="token punctuation">{</span><span class="token property">margin</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector">body</span><span class="token punctuation">{</span><span class="token property">min-width</span><span class="token punctuation">:</span> <span class="token number">700</span>px<span class="token punctuation">;</span><span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.header</span>,        <span class="token class">.footer</span></span><span class="token punctuation">{</span>            <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">1</span>px solid <span class="token hexcode">#333</span><span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> <span class="token hexcode">#aaa</span><span class="token punctuation">;</span>            <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.left</span>,        <span class="token class">.main</span>,        <span class="token class">.right</span></span><span class="token punctuation">{</span>            <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span>            <span class="token property">float</span><span class="token punctuation">:</span> left<span class="token punctuation">;</span>            <span class="token property">min-height</span><span class="token punctuation">:</span> <span class="token number">130</span>px<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.container</span></span><span class="token punctuation">{</span>            <span class="token property">border</span><span class="token punctuation">:</span> <span class="token number">2</span>px solid yellow<span class="token punctuation">;</span>            <span class="token property">padding</span><span class="token punctuation">:</span><span class="token number">0</span> <span class="token number">220</span>px <span class="token number">0</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.left</span></span><span class="token punctuation">{</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">left</span><span class="token punctuation">:</span> -<span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">200</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.right</span></span><span class="token punctuation">{</span>            <span class="token property">margin-left</span><span class="token punctuation">:</span> -<span class="token number">220</span>px<span class="token punctuation">;</span>            <span class="token property">right</span><span class="token punctuation">:</span> -<span class="token number">220</span>px<span class="token punctuation">;</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">220</span>px<span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.main</span></span><span class="token punctuation">{</span>            <span class="token property">width</span><span class="token punctuation">:</span> <span class="token number">100%</span><span class="token punctuation">;</span>            <span class="token property">background</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>        <span class="token punctuation">}</span>        <span class="token selector"><span class="token class">.footer</span></span><span class="token punctuation">{</span>            <span class="token property">clear</span><span class="token punctuation">:</span> both<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>style</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>header<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>header<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>container<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>main<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>left<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>left<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>right<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>right<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>footer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-弹性布局"><a href="#3-弹性布局" class="headerlink" title="3.弹性布局"></a>3.弹性布局</h1><h1 id="4-流式布局"><a href="#4-流式布局" class="headerlink" title="4.流式布局"></a>4.流式布局</h1><h1 id="5-瀑布流布局"><a href="#5-瀑布流布局" class="headerlink" title="5.瀑布流布局"></a>5.瀑布流布局</h1><h1 id="7-响应式布局"><a href="#7-响应式布局" class="headerlink" title="7.响应式布局"></a>7.响应式布局</h1><h1 id="8-REM实现响应式布局"><a href="#8-REM实现响应式布局" class="headerlink" title="8.REM实现响应式布局"></a>8.REM实现响应式布局</h1><p>你好！ 这是你第一次使用 <strong>Markdown编辑器</strong> 所展示的欢迎页。如果你想学习如何使用Markdown编辑器, 可以仔细阅读这篇文章，了解一下Markdown的基本语法知识。</p><h2 id="新的改变"><a href="#新的改变" class="headerlink" title="新的改变"></a>新的改变</h2><p>我们对Markdown编辑器进行了一些功能拓展与语法支持，除了标准的Markdown编辑器功能，我们增加了如下几点新功能，帮助你用它写博客：</p><ol><li><strong>全新的界面设计</strong> ，将会带来全新的写作体验；</li><li>在创作中心设置你喜爱的代码高亮样式，Markdown <strong>将代码片显示选择的高亮样式</strong> 进行展示；</li><li>增加了 <strong>图片拖拽</strong> 功能，你可以将本地的图片直接拖拽到编辑区域直接展示；</li><li>全新的 <strong>KaTeX数学公式</strong> 语法；</li><li>增加了支持<strong>甘特图的mermaid语法<a href="[mermaid语法说明](https://mermaidjs.github.io/)">^1</a></strong> 功能；</li><li>增加了 <strong>多屏幕编辑</strong> Markdown文章功能；</li><li>增加了 <strong>焦点写作模式、预览模式、简洁写作模式、左右区域同步滚轮设置</strong> 等功能，功能按钮位于编辑区域与预览区域中间；</li><li>增加了 <strong>检查列表</strong> 功能。</li></ol><h2 id="功能快捷键"><a href="#功能快捷键" class="headerlink" title="功能快捷键"></a>功能快捷键</h2><p>撤销：<kbd>Ctrl/Command</kbd> + <kbd>Z</kbd><br>重做：<kbd>Ctrl/Command</kbd> + <kbd>Y</kbd><br>加粗：<kbd>Ctrl/Command</kbd> + <kbd>B</kbd><br>斜体：<kbd>Ctrl/Command</kbd> + <kbd>I</kbd><br>标题：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>H</kbd><br>无序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>U</kbd><br>有序列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>O</kbd><br>检查列表：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>C</kbd><br>插入代码：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>K</kbd><br>插入链接：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>L</kbd><br>插入图片：<kbd>Ctrl/Command</kbd> + <kbd>Shift</kbd> + <kbd>G</kbd></p><h2 id="合理的创建标题，有助于目录的生成"><a href="#合理的创建标题，有助于目录的生成" class="headerlink" title="合理的创建标题，有助于目录的生成"></a>合理的创建标题，有助于目录的生成</h2><p>直接输入1次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成1级标题。<br>输入2次<kbd>#</kbd>，并按下<kbd>space</kbd>后，将生成2级标题。<br>以此类推，我们支持6级标题。有助于使用<code>TOC</code>语法后生成一个完美的目录。</p><h2 id="如何改变文本的样式"><a href="#如何改变文本的样式" class="headerlink" title="如何改变文本的样式"></a>如何改变文本的样式</h2><p><em>强调文本</em> <em>强调文本</em></p><p><strong>加粗文本</strong> <strong>加粗文本</strong></p><p>==标记文本==</p><p><del>删除文本</del></p><blockquote><p>引用文本</p></blockquote><p>H~2~O is是液体。</p><p>2^10^ 运算结果是 1024.</p><h2 id="插入链接与图片"><a href="#插入链接与图片" class="headerlink" title="插入链接与图片"></a>插入链接与图片</h2><p>链接: <a href="https://mp.csdn.net" target="_blank" rel="noopener">link</a>.</p><p>图片: <figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://avatar.csdn.net/7/7/B/1_ralf_hx163com.jpg" alt="Alt" title>                </div>                <div class="image-caption">Alt</div>            </figure></p><p>带尺寸的图片: <figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://avatar.csdn.net/7/7/B/1_ralf_hx163com.jpg" alt="Alt" title="=30x30">                </div>                <div class="image-caption">=30x30</div>            </figure></p><p>居中的图片: <figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://avatar.csdn.net/7/7/B/1_ralf_hx163com.jpg#pic_center" alt="Alt" title>                </div>                <div class="image-caption">Alt</div>            </figure></p><p>居中并且带尺寸的图片: <figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://avatar.csdn.net/7/7/B/1_ralf_hx163com.jpg#pic_center" alt="Alt" title="=30x30">                </div>                <div class="image-caption">=30x30</div>            </figure></p><p>当然，我们为了让用户更加便捷，我们增加了图片拖拽功能。</p><h2 id="如何插入一段漂亮的代码片"><a href="#如何插入一段漂亮的代码片" class="headerlink" title="如何插入一段漂亮的代码片"></a>如何插入一段漂亮的代码片</h2><p>去<a href="https://mp.csdn.net/configure" target="_blank" rel="noopener">博客设置</a>页面，选择一款你喜欢的代码片高亮样式，下面展示同样高亮的 <code>代码片</code>.</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// An highlighted block</span><span class="token keyword">var</span> foo <span class="token operator">=</span> <span class="token string">'bar'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="生成一个适合你的列表"><a href="#生成一个适合你的列表" class="headerlink" title="生成一个适合你的列表"></a>生成一个适合你的列表</h2><ul><li>项目<ul><li>项目<ul><li>项目</li></ul></li></ul></li></ul><ol><li>项目1</li><li>项目2</li><li>项目3</li></ol><ul><li style="list-style: none"><input type="checkbox"> 计划任务</li><li style="list-style: none"><input type="checkbox" checked> 完成任务</li></ul><h2 id="创建一个表格"><a href="#创建一个表格" class="headerlink" title="创建一个表格"></a>创建一个表格</h2><p>一个简单的表格是这么创建的：<br>项目     | Value<br>——– | —–<br>电脑  | $1600<br>手机  | $12<br>导管  | $1</p><h3 id="设定内容居中、居左、居右"><a href="#设定内容居中、居左、居右" class="headerlink" title="设定内容居中、居左、居右"></a>设定内容居中、居左、居右</h3><p>使用<code>:---------:</code>居中<br>使用<code>:----------</code>居左<br>使用<code>----------:</code>居右<br>| 第一列       | 第二列         | 第三列        |<br>|:———–:| ————-:|:————-|<br>| 第一列文本居中 | 第二列文本居右  | 第三列文本居左 |</p><h3 id="SmartyPants"><a href="#SmartyPants" class="headerlink" title="SmartyPants"></a>SmartyPants</h3><p>SmartyPants将ASCII标点字符转换为“智能”印刷标点HTML实体。例如：<br>|    TYPE   |ASCII                          |HTML<br>|—————-|——————————-|—————————–|<br>|Single backticks|<code>&#39;Isn&#39;t this fun?&#39;</code>            |’Isn’t this fun?’            |<br>|Quotes          |<code>&quot;Isn&#39;t this fun?&quot;</code>            |”Isn’t this fun?”            |<br>|Dashes          |<code>-- is en-dash, --- is em-dash</code>|– is en-dash, — is em-dash|</p><h2 id="创建一个自定义列表"><a href="#创建一个自定义列表" class="headerlink" title="创建一个自定义列表"></a>创建一个自定义列表</h2><p>Markdown<br>:  Text-to-HTML conversion tool</p><p>Authors<br>:  John<br>:  Luke</p><h2 id="如何创建一个注脚"><a href="#如何创建一个注脚" class="headerlink" title="如何创建一个注脚"></a>如何创建一个注脚</h2><p>一个具有注脚的文本。<a href="注脚的解释">^2</a></p><h2 id="注释也是必不可少的"><a href="#注释也是必不可少的" class="headerlink" title="注释也是必不可少的"></a>注释也是必不可少的</h2><p>Markdown将文本转换为 HTML。</p><p>*[HTML]:   超文本标记语言</p><h2 id="KaTeX数学公式"><a href="#KaTeX数学公式" class="headerlink" title="KaTeX数学公式"></a>KaTeX数学公式</h2><p>您可以使用渲染LaTeX数学表达式 <a href="https://khan.github.io/KaTeX/" target="_blank" rel="noopener">KaTeX</a>:</p><p>Gamma公式展示 $\Gamma(n) = (n-1)!\quad\forall<br>n\in\mathbb N$ 是通过欧拉积分</p><p>$$<br>\Gamma(z) = \int_0^\infty t^{z-1}e^{-t}dt\,.<br>$$</p><blockquote><p>你可以找到更多关于的信息 <strong>LaTeX</strong> 数学表达式<a href="http://meta.math.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference" target="_blank" rel="noopener">here</a>.</p></blockquote><h2 id="新的甘特图功能，丰富你的文章"><a href="#新的甘特图功能，丰富你的文章" class="headerlink" title="新的甘特图功能，丰富你的文章"></a>新的甘特图功能，丰富你的文章</h2><pre class="line-numbers language-mermaid"><code class="language-mermaid">gantt        dateFormat  YYYY-MM-DD        title Adding GANTT diagram functionality to mermaid        section 现有任务        已完成               :done,    des1, 2014-01-06,2014-01-08        进行中               :active,  des2, 2014-01-09, 3d        计划一               :         des3, after des2, 5d        计划二               :         des4, after des3, 5d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>关于 <strong>甘特图</strong> 语法，参考 <a href="https://mermaidjs.github.io/" target="_blank" rel="noopener">这儿</a>,</li></ul><h2 id="UML-图表"><a href="#UML-图表" class="headerlink" title="UML 图表"></a>UML 图表</h2><p>可以使用UML图表进行渲染。 <a href="https://mermaidjs.github.io/" target="_blank" rel="noopener">Mermaid</a>. 例如下面产生的一个序列图：:</p><pre class="line-numbers language-mermaid"><code class="language-mermaid">sequenceDiagram张三 ->> 李四: 你好！李四, 最近怎么样?李四-->>王五: 你最近怎么样，王五？李四--x 张三: 我很好，谢谢!李四-x 王五: 我很好，谢谢!Note right of 王五: 李四想了很长时间, 文字太长了<br/>不适合放在一行.李四-->>张三: 打量着王五...张三->>王五: 很好... 王五, 你怎么样?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这将产生一个流程图。:</p><pre class="line-numbers language-mermaid"><code class="language-mermaid">graph LRA[长方形] -- 链接 --> B((圆))A --> C(圆角长方形)B --> D{菱形}C --> D<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>关于 <strong>Mermaid</strong> 语法，参考 <a href="https://mermaidjs.github.io/" target="_blank" rel="noopener">这儿</a>,</li></ul><h2 id="FLowchart流程图"><a href="#FLowchart流程图" class="headerlink" title="FLowchart流程图"></a>FLowchart流程图</h2><p>我们依旧会支持flowchart的流程图：</p><pre class="line-numbers language-mermaid"><code class="language-mermaid">flowchatst=>start: 开始e=>end: 结束op=>operation: 我的操作cond=>condition: 确认？st->op->condcond(yes)->econd(no)->op<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>关于 <strong>Flowchart流程图</strong> 语法，参考 <a href="http://adrai.github.io/flowchart.js/" target="_blank" rel="noopener">这儿</a>.</li></ul><h2 id="导出与导入"><a href="#导出与导入" class="headerlink" title="导出与导入"></a>导出与导入</h2><h3 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h3><p>如果你想尝试使用此编辑器, 你可以在此篇文章任意编辑。当你完成了一篇文章的写作, 在上方工具栏找到 <strong>文章导出</strong> ，生成一个.md文件或者.html文件进行本地保存。</p><h3 id="导入"><a href="#导入" class="headerlink" title="导入"></a>导入</h3><p>如果你想加载一篇你写过的.md文件或者.html文件，在上方工具栏可以选择导入功能进行对应扩展名的文件导入，<br>继续你的创作。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;@[页面布局]&lt;/p&gt;
&lt;h1 id=&quot;1-负边距与浮动布局&quot;&gt;&lt;a href=&quot;#1-负边距与浮动布局&quot; class=&quot;headerlink&quot; title=&quot;1.负边距与浮动布局&quot;&gt;&lt;/a&gt;1.负边距与浮动布局&lt;/h1&gt;&lt;h2 id=&quot;1-1负边距&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/25/Ajax/"/>
    <id>http://yoursite.com/2019/03/25/Ajax/</id>
    <published>2019-03-25T13:57:40.771Z</published>
    <updated>2019-03-21T12:48:03.766Z</updated>
    
    <content type="html"><![CDATA[<p>@<a href="这里写自定义目录标题">TOC</a></p><h1 id="Ajax学习"><a href="#Ajax学习" class="headerlink" title="Ajax学习"></a>Ajax学习</h1><h2 id="1-原生Ajax"><a href="#1-原生Ajax" class="headerlink" title="1.原生Ajax"></a>1.原生Ajax</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">// 使用Ajax发送请求需要如下几步：</span><span class="token comment" spellcheck="true">//1.创建XMLHttpRequest对象</span><span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//2.准备发送</span>xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'get'</span><span class="token punctuation">,</span><span class="token string">'./01.check.php?username='</span><span class="token operator">+</span>uname<span class="token operator">+</span><span class="token string">'&amp;password='</span><span class="token operator">+</span>pw<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//3.执行发送动作</span>xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//4.指定回调函数</span>xhr<span class="token punctuation">.</span>onreadstatechane <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readState <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">var</span> data <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>      <span class="token keyword">var</span> info <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'info'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>data <span class="token operator">==</span> <span class="token string">'1'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        info<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'登录成功'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>data <span class="token operator">==</span> <span class="token string">'2'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        info<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> <span class="token string">'用户名或者密码错误'</span><span class="token punctuation">;</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>1.创建XMLHttpRequest对象</strong></p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>XMLHttpRequest<span class="token punctuation">)</span><span class="token punctuation">{</span>  xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//标准</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>  xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActiveObject</span><span class="token punctuation">(</span><span class="token string">"Microsoft"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//IE6</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>2. 准备发送</strong></p><ul><li>参数一：请求方式(get获取数据，post提交数据)</li><li>参数二：请求地址</li><li>参数三：同步或异步标志位，默认true表示异步，false表示同步</li></ul><p>如果是get请求那么请求参数必须在url中传递，<strong>encodeURI()</strong><br>用来对中文参数进行编码，防止乱码</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> param <span class="token operator">=</span> <span class="token string">'username'</span><span class="token operator">+</span>uname<span class="token operator">+</span><span class="token string">'&amp;password='</span><span class="token operator">+</span>pw<span class="token punctuation">;</span>xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'get'</span><span class="token punctuation">,</span><span class="token string">'03get.php?'</span><span class="token operator">+</span><span class="token function">encodeURI</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>3. 执行发送动作</strong><br>get请求在这里需要添加null参数，null不能省</p><pre class="line-numbers language-javascript"><code class="language-javascript">xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>post请求参数通过send传递，不需要通过encodeURI()转码</p><pre class="line-numbers language-javascript"><code class="language-javascript">xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'post'</span><span class="token punctuation">,</span><span class="token string">'04post.php'</span><span class="token punctuation">,</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>4. 指定回调函数</strong></p><ul><li>readState=1表示已经发送了请求</li><li>readState=2表示浏览器已经接收到了服务器响应的数据</li><li>readState=3表示正在解析数据</li><li><p>readState=4表示数据已经解析完成，可以使用了，但是这个数据不一定是正常的</p><p><em>HTTP常见的状态码</em>：<br>  200：响应成功<br>  404：没有找到请求的资源<br>  500：服务器端错误</p></li></ul><h2 id="2-Json"><a href="#2-Json" class="headerlink" title="2.Json"></a>2.Json</h2><p>json数据和普通js对象的区别：</p><ol><li>json数据没有变量</li><li>json行驶的数据结尾没有分号</li><li>json数据中的链必须用双引号包住</li></ol><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> str <span class="token operator">=</span> <span class="token string">'{"name":"zahngsan","age":"12"}'</span><span class="token punctuation">;</span><span class="token keyword">var</span> obj <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//把json行驶的字符串转换成对象</span><span class="token keyword">var</span> str1 <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//把对象转成字符串</span>window<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> uname <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'username'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>    <span class="token keyword">var</span> pw <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'password'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//1.创建XMLHttpRequest对象</span>    <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>XMLHttpRequest<span class="token punctuation">)</span><span class="token punctuation">{</span>      xhr <span class="token operator">=</span> <span class="token function">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>      xhr <span class="token operator">=</span> <span class="token function">ActiveObject</span><span class="token punctuation">(</span><span class="token string">'Microsoft'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">//2.准备发送</span>    <span class="token keyword">var</span> param <span class="token operator">=</span> <span class="token string">'username='</span><span class="token operator">+</span>uname<span class="token operator">+</span><span class="token string">'&amp;password='</span><span class="token operator">+</span>pw<span class="token punctuation">;</span>    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span><span class="token string">'post'</span><span class="token punctuation">,</span><span class="token string">'07.php'</span><span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">//3.执行发送动作</span>    xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">'Content-Type'</span><span class="token punctuation">,</span><span class="token string">"application/x-www-form-urlencoded"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//post在这里传递，不需要转码</span>    <span class="token comment" spellcheck="true">//4.指定回调函数</span>    xhr<span class="token punctuation">.</span>onreadstatechange <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readState <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">var</span> data <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>          <span class="token keyword">var</span> obj <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">var</span> tag <span class="token operator">=</span> <span class="token string">'&lt;div>&lt;span>'</span><span class="token operator">+</span>obj<span class="token punctuation">.</span>info<span class="token operator">+</span><span class="token string">'&lt;/span>&lt;span>-----&lt;/span>&lt;span>'</span><span class="token operator">+</span>obj<span class="token punctuation">.</span>message<span class="token operator">+</span><span class="token string">'&lt;/span>&lt;/div>'</span><span class="token punctuation">;</span>          <span class="token keyword">var</span> info <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'info'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          info<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> tag<span class="token punctuation">;</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">//console.log(data.name1);</span>          <span class="token comment" spellcheck="true">//console.log(data.name2);</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="封装Ajax"><a href="#封装Ajax" class="headerlink" title="封装Ajax"></a>封装Ajax</h2><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">ajax</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span>type<span class="token punctuation">,</span>param<span class="token punctuation">,</span>dataType<span class="token punctuation">,</span>callback<span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>XHRHttpRequest<span class="token punctuation">)</span><span class="token punctuation">{</span>    xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActiveXObject</span><span class="token punctuation">(</span><span class="token string">'Microsoft.XMLHTTP'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">'get'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    url <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">"?"</span><span class="token operator">+</span>param<span class="token punctuation">;</span>  <span class="token punctuation">}</span>  xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>type<span class="token punctuation">,</span>url<span class="token punctuation">,</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">'post'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>type <span class="token operator">==</span> <span class="token string">'post'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      data <span class="token operator">=</span> param<span class="token punctuation">;</span>      xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">'Ccontent-Type'</span><span class="token punctuation">,</span><span class="token string">"application/x-www-form-urlencoded"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    xhr<span class="token punctuation">.</span>onreadystatechange <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">var</span> data <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>dataType <span class="token operator">==</span> <span class="token string">'json'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            data <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>          <span class="token function">callback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">ajax</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// 默认参数</span>    <span class="token keyword">var</span> defaults <span class="token operator">=</span> <span class="token punctuation">{</span>        type <span class="token punctuation">:</span> <span class="token string">'get'</span><span class="token punctuation">,</span>        data <span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>        url <span class="token punctuation">:</span> <span class="token string">'#'</span><span class="token punctuation">,</span>        dataType <span class="token punctuation">:</span> <span class="token string">'text'</span><span class="token punctuation">,</span>        <span class="token keyword">async</span> <span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        success <span class="token punctuation">:</span> <span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 处理形参，传递参数的时候就覆盖默认参数，不传递就使用默认参数</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> key <span class="token keyword">in</span> obj<span class="token punctuation">)</span><span class="token punctuation">{</span>        defaults<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 1、创建XMLHttpRequest对象</span>    <span class="token keyword">var</span> xhr <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>window<span class="token punctuation">.</span>XMLHttpRequest<span class="token punctuation">)</span><span class="token punctuation">{</span>        xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XMLHttpRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        xhr <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ActiveXObject</span><span class="token punctuation">(</span><span class="token string">'Microsoft.XMLHTTP'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 把对象形式的参数转化为字符串形式的参数</span>    <span class="token comment" spellcheck="true">/*    {username:'zhangsan','password':123}    转换为    username=zhangsan&amp;password=123    */</span>    <span class="token keyword">var</span> param <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> attr <span class="token keyword">in</span> obj<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>        param <span class="token operator">+</span><span class="token operator">=</span> attr <span class="token operator">+</span> <span class="token string">'='</span> <span class="token operator">+</span> obj<span class="token punctuation">.</span>data<span class="token punctuation">[</span>attr<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">'&amp;'</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">{</span>        param <span class="token operator">=</span> param<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>param<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 处理get请求参数并且处理中文乱码问题</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>defaults<span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token string">'get'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        defaults<span class="token punctuation">.</span>url <span class="token operator">+</span><span class="token operator">=</span> <span class="token string">'?'</span> <span class="token operator">+</span> <span class="token function">encodeURI</span><span class="token punctuation">(</span>param<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 2、准备发送（设置发送的参数）</span>    xhr<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>defaults<span class="token punctuation">.</span>type<span class="token punctuation">,</span>defaults<span class="token punctuation">.</span>url<span class="token punctuation">,</span>defaults<span class="token punctuation">.</span><span class="token keyword">async</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 处理post请求参数并且设置请求头信息（必须设置）</span>    <span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>defaults<span class="token punctuation">.</span>type <span class="token operator">==</span> <span class="token string">'post'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        data <span class="token operator">=</span> param<span class="token punctuation">;</span>        xhr<span class="token punctuation">.</span><span class="token function">setRequestHeader</span><span class="token punctuation">(</span><span class="token string">"Content-Type"</span><span class="token punctuation">,</span><span class="token string">"application/x-www-form-urlencoded"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 3、执行发送动作</span>    xhr<span class="token punctuation">.</span><span class="token function">send</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 处理同步请求，不会调用回调函数</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>defaults<span class="token punctuation">.</span><span class="token keyword">async</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>defaults<span class="token punctuation">.</span>dataType <span class="token operator">==</span> <span class="token string">'json'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">// 4、指定回调函数（处理服务器响应数据）</span>    xhr<span class="token punctuation">.</span>onreadystatechange <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>readyState <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>xhr<span class="token punctuation">.</span>status <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                <span class="token keyword">var</span> data <span class="token operator">=</span> xhr<span class="token punctuation">.</span>responseText<span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>defaults<span class="token punctuation">.</span>dataType <span class="token operator">==</span> <span class="token string">'json'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                    <span class="token comment" spellcheck="true">// data = eval("("+ data +")");</span>                    data <span class="token operator">=</span> JSON<span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">}</span>                defaults<span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>调用：window<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">var</span> btn1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  btn1<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">'./10-1.php'</span><span class="token punctuation">,</span><span class="token string">'get'</span><span class="token punctuation">,</span><span class="token string">'username=李四&amp;password=123'</span><span class="token punctuation">,</span><span class="token string">'text'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">var</span> div1 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'info1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      div1<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> data<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span>  <span class="token keyword">var</span> btn2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  btn2<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token string">'./10-2.php'</span><span class="token punctuation">,</span><span class="token string">'post'</span><span class="token punctuation">,</span><span class="token string">'username=张三&amp;password=123456'</span><span class="token punctuation">,</span><span class="token string">'json'</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>          <span class="token keyword">var</span> div2 <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'info2'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token comment" spellcheck="true">// div2.innerHTML = data;</span>          div2<span class="token punctuation">.</span>innerHTML <span class="token operator">=</span> data<span class="token punctuation">.</span>username <span class="token operator">+</span> <span class="token string">"====="</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>password<span class="token punctuation">;</span>      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="jQuer-Ajax相关的API基本使用"><a href="#jQuer-Ajax相关的API基本使用" class="headerlink" title="jQuer-Ajax相关的API基本使用"></a>jQuer-Ajax相关的API基本使用</h2><pre class="line-numbers language-javascript"><code class="language-javascript">window<span class="token punctuation">.</span>onload <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>  <span class="token keyword">var</span> btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'btn'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  btn<span class="token punctuation">.</span>onclick <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> code <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">'code'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>    $<span class="token punctuation">.</span><span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>      type<span class="token punctuation">:</span><span class="token string">'post'</span><span class="token punctuation">,</span>      url<span class="token punctuation">:</span><span class="token string">'./11.php'</span><span class="token punctuation">,</span>      data<span class="token punctuation">:</span><span class="token punctuation">{</span>code<span class="token punctuation">:</span>code<span class="token punctuation">}</span><span class="token punctuation">,</span>      dataType<span class="token punctuation">:</span><span class="token string">'json'</span><span class="token punctuation">,</span>      success<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">/*var info = document.getElementByid('info');        if(data.flag == 0){          info.innerHTML = "没有这本书";        }else{          var tag = '&lt;ul>&lt;li>书名：' + data.bookname + '&lt;/li>&lt;li>作者：' + data.author + '&lt;/li>&lt;li>描述：' + data.desc + '&lt;/li>&lt;/ul>';          info.innerHTML = tag;*/</span>          <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>flag <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">'#info'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">"该图书不存在"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> tag <span class="token operator">=</span> <span class="token string">'&lt;ul>&lt;li>书名：'</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>bookname <span class="token operator">+</span> <span class="token string">'&lt;/li>&lt;li>作者：'</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>author <span class="token operator">+</span> <span class="token string">'&lt;/li>&lt;li>描述：'</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>desc <span class="token operator">+</span> <span class="token string">'&lt;/li>&lt;/ul>'</span><span class="token punctuation">;</span>            <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#info"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">}</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        error<span class="token punctuation">:</span><span class="token keyword">function</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">{</span>          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#info"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">"服务器发生错误，请与管理员联系"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>      <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span>  <span class="token punctuation">}</span><span class="token punctuation">}</span>精简：<span class="token keyword">var</span> data <span class="token operator">=</span> <span class="token function">ajax</span><span class="token punctuation">(</span><span class="token punctuation">{</span>  type<span class="token punctuation">:</span><span class="token string">'post'</span><span class="token punctuation">,</span>  url<span class="token punctuation">:</span><span class="token string">'./14.php'</span><span class="token punctuation">,</span>  dataType<span class="token punctuation">:</span><span class="token string">'json'</span><span class="token punctuation">,</span>  <span class="token keyword">async</span><span class="token punctuation">:</span><span class="token boolean">false</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">//data:{username:"张三",password:"123"}</span> data<span class="token punctuation">:</span><span class="token punctuation">{</span>code<span class="token punctuation">:</span>code<span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*console.log(data);var html = '&lt;div>&lt;span>用户名：'+data.password+'&lt;/span>&lt;span>密码：'+data.password+'&lt;/span>&lt;/div>'$("#info").html(html);*/</span>data <span class="token operator">=</span> data<span class="token punctuation">.</span>responseJSON<span class="token punctuation">;</span><span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span>flag <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#info"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span><span class="token string">"该图书不存在"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> tag <span class="token operator">=</span> <span class="token string">'&lt;ul>&lt;li>书名：'</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>bookname <span class="token operator">+</span> <span class="token string">'&lt;/li>&lt;li>作者：'</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>author <span class="token operator">+</span> <span class="token string">'&lt;/li>&lt;li>描述：'</span> <span class="token operator">+</span> data<span class="token punctuation">.</span>desc <span class="token operator">+</span> <span class="token string">'&lt;/li>&lt;/ul>'</span><span class="token punctuation">;</span>    <span class="token function">$</span><span class="token punctuation">(</span><span class="token string">"#info"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">html</span><span class="token punctuation">(</span>tag<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;@&lt;a href=&quot;这里写自定义目录标题&quot;&gt;TOC&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;Ajax学习&quot;&gt;&lt;a href=&quot;#Ajax学习&quot; class=&quot;headerlink&quot; title=&quot;Ajax学习&quot;&gt;&lt;/a&gt;Ajax学习&lt;/h1&gt;&lt;h2 id=&quot;1-原生Ajax&quot;&gt;&lt;a
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>水平垂直居中</title>
    <link href="http://yoursite.com/2019/03/25/%E6%B0%B4%E5%B9%B3%E5%9E%82%E7%9B%B4%E5%B1%85%E4%B8%AD/"/>
    <id>http://yoursite.com/2019/03/25/水平垂直居中/</id>
    <published>2019-03-25T13:57:40.491Z</published>
    <updated>2019-04-03T01:04:11.897Z</updated>
    
    <content type="html"><![CDATA[<h2 id="文字水平垂直居中"><a href="#文字水平垂直居中" class="headerlink" title="文字水平垂直居中"></a>文字水平垂直居中</h2><h3 id="一行文字的水平垂直居中对齐方式"><a href="#一行文字的水平垂直居中对齐方式" class="headerlink" title="一行文字的水平垂直居中对齐方式"></a>一行文字的水平垂直居中对齐方式</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;title&gt;1-水平垂直居中&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        div{            height: 200px;            width: 200px;            border: 1px solid #333;            text-align: center;/*块级元素内文本的水平对齐方式*/        }        span{            line-height: 200px;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div&gt;        &lt;span&gt;一行文本水平居中显示&lt;/span&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>显示结果:<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/TB5wxj1.jpg" alt="一行文字水平居中显示" title>                </div>                <div class="image-caption">一行文字水平居中显示</div>            </figure></p><h3 id="块级元素水平垂直居中显示方法一：absolute-transform"><a href="#块级元素水平垂直居中显示方法一：absolute-transform" class="headerlink" title="块级元素水平垂直居中显示方法一：absolute+transform"></a>块级元素水平垂直居中显示方法一：absolute+transform</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;title&gt;2-块级元素水平垂直居中-absolute+transform&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        .parent{            width: 400px;            height: 400px;            border:1px solid #ccc;            position: relative;        }        .child{            width: 200px;            height: 200px;            border: 1px solid #333;            position: absolute;            left: 50%;            top:50%;            transform: translate(-50%,-50%);            -ms-transform: translate(-50%,-50%);        /* IE 9 */            -webkit-transform: translate(-50%,-50%);    /* Safari and Chrome */            -o-transform: translate(-50%,-50%);        /* Opera */            -moz-transform: translate(-50%,-50%);        /* Firefox */        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;parent&quot;&gt;        &lt;div class=&quot;child&quot;&gt;            多行文字水平垂直居中显示            &lt;br&gt;使用absolute+transform方法        &lt;/div&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>解释：绝对定位元素的定位基准点是其有定位元素的祖先元素而translate要做偏移，是相对于自身的中心点而言，如果用百分比做单位，参考值就是本身元素的宽度</p><p>如图：<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/qZYoGNA.jpg" alt="绝对定位" title>                </div>                <div class="image-caption">绝对定位</div>            </figure></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/aSfuNbO.jpg" alt="transform" title>                </div>                <div class="image-caption">transform</div>            </figure><p>效果：<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/wVI7QNr.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></p><h3 id="块级元素水平垂直方法二：综合水平居中和垂直居中"><a href="#块级元素水平垂直方法二：综合水平居中和垂直居中" class="headerlink" title="块级元素水平垂直方法二：综合水平居中和垂直居中"></a>块级元素水平垂直方法二：综合水平居中和垂直居中</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;title&gt;综合水平居中和垂直居中&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        .parent{            width: 400px;            height: 400px;            border:1px solid #ccc;            text-align: center;            display:table-cell;            vertical-align: middle;        }        .child{            width: 200px;            height: 200px;            border:1px solid #ccc;            display: inline-block;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;parent&quot;&gt;        &lt;div class=&quot;child&quot;&gt;&lt;/div&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>效果：<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/LBJLzIh.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></p><p><strong>一个相关的例子，解决图片底部3px的问题。</strong></p><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;title&gt;综合水平居中和垂直居中&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        .parent{            width: 400px;            height: 400px;            /*border:1px solid #ccc;*/            background-color: red;            text-align: center;            display:table-cell;            vertical-align: middle;        }        img{            width: 100%;            height: 100%;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;parent&quot;&gt;        &lt;img src=&quot;./img/1.jpg&quot;&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>问题：父框会多出3px的高度</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/rIHuS74.jpg" alt="多出3px" title>                </div>                <div class="image-caption">多出3px</div>            </figure><p>解决：</p><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;title&gt;综合水平居中和垂直居中&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        .parent{            width: 400px;            height: 400px;            /*border:1px solid #ccc;*/            background-color: red;            text-align: center;            display:table-cell;            vertical-align: middle;            /*解决方法一：*/            /*font-size: 0px;*/            /*解决方法二：*/            /*line-height:0px;*/        }        img{            width: 100%;            height: 100%;            /*解决方法二：给img设置display:block;使vertical-align:middle失效，因为它对块级元素不生效*/            display: block;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;parent&quot;&gt;        &lt;img src=&quot;./img/1.jpg&quot;&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>效果：<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/WyJQxvy.jpg" alt="解决了3px" title>                </div>                <div class="image-caption">解决了3px</div>            </figure></p><h3 id="块级元素水平垂直方法三：flex方法"><a href="#块级元素水平垂直方法三：flex方法" class="headerlink" title="块级元素水平垂直方法三：flex方法"></a>块级元素水平垂直方法三：flex方法</h3><pre><code>&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;title&gt;4-flex方法&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        .parent{            height: 400px;            width: 400px;            border:1px solid #ccc;            display: flex;            justify-content: center;            align-items:center;        }        .child{            height: 200px;            width: 200px;            border:1px solid #ccc;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;parent&quot;&gt;        &lt;div class=&quot;child&quot;&gt;&lt;/div&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p>效果：<figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/DJEAgOS.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;文字水平垂直居中&quot;&gt;&lt;a href=&quot;#文字水平垂直居中&quot; class=&quot;headerlink&quot; title=&quot;文字水平垂直居中&quot;&gt;&lt;/a&gt;文字水平垂直居中&lt;/h2&gt;&lt;h3 id=&quot;一行文字的水平垂直居中对齐方式&quot;&gt;&lt;a href=&quot;#一行文字的水平垂直居中对齐方
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/25/%E4%B8%89%E6%AC%A1%E6%8F%A1%E6%89%8B%E5%92%8C%E5%9B%9B%E6%AC%A1%E6%8C%A5%E6%89%8B%E8%BF%87%E7%A8%8B/"/>
    <id>http://yoursite.com/2019/03/25/三次握手和四次挥手过程/</id>
    <published>2019-03-25T13:57:40.485Z</published>
    <updated>2019-03-19T08:55:49.424Z</updated>
    
    <content type="html"><![CDATA[<h1 id="三次握手"><a href="#三次握手" class="headerlink" title="三次握手"></a>三次握手</h1><p>（1）三次握手的详述</p><pre><code>首先Client端发送连接请求报文，Server段接受连接后回复ACK报文，并为这次连接分配资源。Client端接收到ACK报文后也向Server段发生ACK报文，并分配资源，这样TCP连接就建立了。</code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/Rdz6WlI.jpg" alt="三次握手建立TCP连接" title>                </div>                <div class="image-caption">三次握手建立TCP连接</div>            </figure><p>最初两端的TCP进程都处于CLOSED关闭状态，A主动打开连接，而B被动打开连接。（A、B关闭状态CLOSED——B收听状态LISTEN——A同步已发送状态SYN-SENT——B同步收到状态SYN-RCVD——A、B连接已建立状态ESTABLISHED）</p><pre><code>B的TCP服务器进程先创建传输控制块TCB，准备接受客户进程的连接请求。然后服务器进程就处于LISTEN（收听）状态，等待客户的连接请求。若有，则作出响应。1）第一次握手：A的TCP客户进程也是首先创建传输控制块TCB，然后向B发出连接请求报文段，（首部的同步位SYN=1，初始序号seq=x），（SYN=1的报文段不能携带数据）但要消耗掉一个序号，此时TCP客户进程进入SYN-SENT（同步已发送）状态。2）第二次握手：B收到连接请求报文段后，如同意建立连接，则向A发送确认，在确认报文段中（SYN=1，ACK=1，确认号ack=x+1，初始序号seq=y），测试TCP服务器进程进入SYN-RCVD（同步收到）状态；3）第三次握手：TCP客户进程收到B的确认后，要向B给出确认报文段（ACK=1，确认号ack=y+1，序号seq=x+1）（初始为seq=x，第二个报文段所以要+1），ACK报文段可以携带数据，不携带数据则不消耗序号。TCP连接已经建立，A进入ESTABLISHED（已建立连接）。当B收到A的确认后，也进入ESTABLISHED状态。</code></pre><p>（2）总结三次握手过程：</p><pre><code>第一次握手：起初两端都处于CLOSED关闭状态，Client将标志位SYN置为1，随机产生一个值seq=x，并将该数据包发送给Server，Client进入SYN-SENT状态，等待Server确认；第二次握手：Server收到数据包后由标志位SYN=1得知Client请求建立连接，Server将标志位SYN和ACK都置为1，ack=x+1，随机产生一个值seq=y，并将该数据包发送给Client以确认连接请求，Server进入SYN-RCVD状态，此时操作系统为该TCP连接分配TCP缓存和变量；第三次握手：Client收到确认后，检查ack是否为x+1，ACK是否为1，如果正确则将标志位ACK置为1，ack=y+1，并且此时操作系统为该TCP连接分配TCP缓存和变量，并将该数据包发送给Server，Server检查ack是否为y+1，ACK是否为1，如果正确则连接建立成功，Client和Server进入ESTABLISHED状态，完成三次握手，随后Client和Server就可以开始传输数据。</code></pre><p>起初A和B都处于CLOSED状态——B创建TCB，处于LISTEN状态，等待A请求——A创建TCB，发送连接请求（SYN=1，seq=x），进入SYN-SENT状态——B收到连接请求，向A发送确认（SYN=ACK=1，确认号ack=x+1，初始序号seq=y），进入SYN-RCVD状态——A收到B的确认后，给B发出确认（ACK=1，ack=y+1，seq=x+1），A进入ESTABLISHED状态——B收到A的确认后，进入ESTABLISHED状态。</p><p>TCB传输控制块Transmission Control Block，存储每一个连接中的重要信息，如TCP连接表，到发送和接收缓存的指针，到重传队列的指针，当前的发送和接收序号。</p><p>（3）为什么A还要发送一次确认呢？可以二次握手吗？</p><pre><code>答：主要为了防止已失效的连接请求报文段突然又传送到了B，因而产生错误。如A发出连接请求，但因连接请求报文丢失而未收到确认，于是A再重传一次连接请求。后来收到了确认，建立了连接。数据传输完毕后，就释放了连接，A工发出了两个连接请求报文段，其中第一个丢失，第二个到达了B，但是第一个丢失的报文段只是在某些网络结点长时间滞留了，延误到连接释放以后的某个时间才到达B，此时B误认为A又发出一次新的连接请求，于是就向A发出确认报文段，同意建立连接，不采用三次握手，只要B发出确认，就建立新的连接了，此时A不理睬B的确认且不发送数据，则B一致等待A发送数据，浪费资源。</code></pre><p>（4）Server端易受到SYN攻击？</p><pre><code>服务器端的资源分配是在二次握手时分配的，而客户端的资源是在完成三次握手时分配的，所以服务器容易受到SYN洪泛攻击，SYN攻击就是Client在短时间内伪造大量不存在的IP地址，并向Server不断地发送SYN包，Server则回复确认包，并等待Client确认，由于源地址不存在，因此Server需要不断重发直至超时，这些伪造的SYN包将长时间占用未连接队列，导致正常的SYN请求因为队列满而被丢弃，从而引起网络拥塞甚至系统瘫痪。</code></pre><p>防范SYN攻击措施：降低主机的等待时间使主机尽快的释放半连接的占用，短时间受到某IP的重复SYN则丢弃后续请求。</p><h1 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h1><p>假设Client端发起中断连接请求，也就是发送FIN报文。Server端接到FIN报文后，意思是说”我Client端没有数据要发给你了”，但是如果你还有数据没有发送完成，则不必急着关闭Socket，可以继续发送数据。所以你先发送ACK，”告诉Client端，你的请求我收到了，但是我还没准备好，请继续你等我的消息”。这个时候Client端就进入FIN_WAIT状态，继续等待Server端的FIN报文。当Server端确定数据已发送完成，则向Client端发送FIN报文，”告诉Client端，好了，我这边数据发完了，准备好关闭连接了”。Client端收到FIN报文后，”就知道可以关闭连接了，但是他还是不相信网络，怕Server端不知道要关闭，所以发送ACK后进入TIME_WAIT状态，如果Server端没有收到ACK则可以重传。“，Server端收到ACK后，”就知道可以断开连接了”。Client端等待了2MSL后依然没有收到回复，则证明Server端已正常关闭，那好，我Client端也可以关闭连接了。Ok，TCP连接就这样关闭了！</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/hpJI7yW.jpg" alt="TCP连接释放的过程" title>                </div>                <div class="image-caption">TCP连接释放的过程</div>            </figure><p>数据传输结束后，通信的双方都可释放连接，A和B都处于ESTABLISHED状态。（A、B连接建立状态ESTABLISHED——A终止等待1状态FIN-WAIT-1——B关闭等待状态CLOSE-WAIT——A终止等待2状态FIN-WAIT-2——B最后确认状态LAST-ACK——A时间等待状态TIME-WAIT——B、A关闭状态CLOSED）</p><pre><code>1）A的应用进程先向其TCP发出连接释放报文段（FIN=1，序号seq=u），并停止再发送数据，主动关闭TCP连接，进入FIN-WAIT-1（终止等待1）状态，等待B的确认。2）B收到连接释放报文段后即发出确认报文段，（ACK=1，确认号ack=u+1，序号seq=v），B进入CLOSE-WAIT（关闭等待）状态，此时的TCP处于半关闭状态，A到B的连接释放。3）A收到B的确认后，进入FIN-WAIT-2（终止等待2）状态，等待B发出的连接释放报文段。4）B没有要向A发出的数据，B发出连接释放报文段（FIN=1，ACK=1，序号seq=w，确认号ack=u+1），B进入LAST-ACK（最后确认）状态，等待A的确认。5）A收到B的连接释放报文段后，对此发出确认报文段（ACK=1，seq=u+1，ack=w+1），A进入TIME-WAIT（时间等待）状态。此时TCP未释放掉，需要经过时间等待计时器设置的时间2MSL后，A才进入CLOSED状态。</code></pre><p>（2）总结四次挥手过程：</p><pre><code>起初A和B处于ESTABLISHED状态——A发出连接释放报文段并处于FIN-WAIT-1状态——B发出确认报文段且进入CLOSE-WAIT状态——A收到确认后，进入FIN-WAIT-2状态，等待B的连接释放报文段——B没有要向A发出的数据，B发出连接释放报文段且进入LAST-ACK状态——A发出确认报文段且进入TIME-WAIT状态——B收到确认报文段后进入CLOSED状态——A经过等待计时器时间2MSL后，进入CLOSED状态。</code></pre><p>（3）为什么A在TIME-WAIT状态必须等待2MSL的时间？</p><pre><code>MSL最长报文段寿命Maximum Segment Lifetime，MSL=2答：　　两个理由：1）保证A发送的最后一个ACK报文段能够到达B。2）防止“已失效的连接请求报文段”出现在本连接中。1）这个ACK报文段有可能丢失，使得处于LAST-ACK状态的B收不到对已发送的FIN+ACK报文段的确认，B超时重传FIN+ACK报文段，而A能在2MSL时间内收到这个重传的FIN+ACK报文段，接着A重传一次确认，重新启动2MSL计时器，最后A和B都进入到CLOSED状态，若A在TIME-WAIT状态不等待一段时间，而是发送完ACK报文段后立即释放连接，则无法收到B重传的FIN+ACK报文段，所以不会再发送一次确认报文段，则B无法正常进入到CLOSED状态。2）A在发送完最后一个ACK报文段后，再经过2MSL，就可以使本连接持续的时间内所产生的所有报文段都从网络中消失，使下一个新的连接中不会出现这种旧的连接请求报文段。</code></pre><p>（4）为什么连接的时候是三次握手，关闭的时候却是四次握手？</p><pre><code>答：因为当Server端收到Client端的SYN连接请求报文后，可以直接发送SYN+ACK报文。其中ACK报文是用来应答的，SYN报文是用来同步的。但是关闭连接时，当Server端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉Client端，&quot;你发的FIN报文我收到了&quot;。只有等到我Server端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送。故需要四步握手。</code></pre><p>（5）为什么TIME_WAIT状态需要经过2MSL(最大报文段生存时间)才能返回到CLOSE状态？</p><pre><code>答：虽然按道理，四个报文都发送完毕，我们可以直接进入CLOSE状态了，但是我们必须假象网络是不可靠的，有可以最后一个ACK丢失。所以TIME_WAIT状态就是用来重发可能丢失的ACK报文。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;三次握手&quot;&gt;&lt;a href=&quot;#三次握手&quot; class=&quot;headerlink&quot; title=&quot;三次握手&quot;&gt;&lt;/a&gt;三次握手&lt;/h1&gt;&lt;p&gt;（1）三次握手的详述&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;首先Client端发送连接请求报文，Server段接受连接后回复ACK报
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/25/%E7%BC%93%E5%AD%98%E6%9C%BA%E5%88%B6/"/>
    <id>http://yoursite.com/2019/03/25/缓存机制/</id>
    <published>2019-03-25T13:57:40.471Z</published>
    <updated>2019-03-19T09:09:17.300Z</updated>
    
    <content type="html"><![CDATA[<p>#</p><pre><code>HTTP报文就是浏览器和服务器间通信时发送及响应的数据块。浏览器向服务器请求数据，发送请求(request)报文；服务器向浏览器返回数据，返回响应(response)报文。报文信息主要分为两部分1.包含属性的首部(header)--------------------------附加信息（cookie，缓存信息等）与缓存相关的规则信息，均包含在header中2.包含数据的主体部分(body)-----------------------HTTP请求真正想要传输的部分</code></pre><p>#缓存规则解析</p><pre><code>为方便大家理解，我们认为浏览器存在一个缓存数据库,用于存储缓存信息。在客户端第一次请求数据时，此时缓存数据库中没有对应的缓存数据，需要请求服务器，服务器返回后，将数据存储至缓存数据库中。</code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/Ov0HsOI.jpg" alt="第一次请求" title>                </div>                <div class="image-caption">第一次请求</div>            </figure><p>HTTP缓存有多种规则，根据是否需要重新向服务器发起请求来分类，我将其分为两大类(强制缓存，对比缓存)<br>在详细介绍这两种规则之前，先通过时序图的方式，让大家对这两种规则有个简单了解。</p><p>已存在缓存数据时，仅基于强制缓存，请求数据的流程如下</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/hEV0zXe.jpg" alt="强缓存" title>                </div>                <div class="image-caption">强缓存</div>            </figure><p>对缓存机制不太了解的同学可能会问，基于对比缓存的流程下，不管是否使用缓存，都需要向服务器发送请求，那么还用缓存干什么？<br>这个问题，我们暂且放下，后文在详细介绍每种缓存规则的时候，会带给大家答案。</p><p>我们可以看到两类缓存规则的不同，强制缓存如果生效，不需要再和服务器发生交互，而对比缓存不管是否生效，都需要与服务端发生交互。<br>两类缓存规则可以同时存在，强制缓存优先级高于对比缓存，也就是说，当执行强制缓存的规则时，如果缓存生效，直接使用缓存，不再执行对比缓存规则。</p><p>#强制缓存</p><p>从上文我们得知，强制缓存，在缓存数据未失效的情况下，可以直接使用缓存数据，那么浏览器是如何判断缓存数据是否失效呢？<br>我们知道，在没有缓存数据的时候，浏览器向服务器请求数据时，服务器会将数据和缓存规则一并返回，缓存规则信息包含在响应header中。</p><p>对于强制缓存来说，响应header中会有两个字段来标明失效规则（Expires/Cache-Control）<br>使用chrome的开发者工具，可以很明显的看到对于强制缓存生效时，网络请求的情况</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/IYNwYpF.jpg" alt="例子" title>                </div>                <div class="image-caption">例子</div>            </figure><p>Expires<br>　　Expires的值为服务端返回的到期时间，即下一次请求时，请求时间小于服务端返回的到期时间，直接使用缓存数据。<br>不过Expires 是HTTP 1.0的东西，现在默认浏览器均默认使用HTTP 1.1，所以它的作用基本忽略。<br>另一个问题是，到期时间是由服务端生成的，但是客户端时间可能跟服务端时间有误差，这就会导致缓存命中的误差。<br>所以HTTP 1.1 的版本，使用Cache-Control替代。</p><p>Cache-Control<br>Cache-Control 是最重要的规则。常见的取值有private、public、no-cache、max-age，no-store，默认为private。<br>private:             客户端可以缓存<br>public:              客户端和代理服务器都可缓存（前端的同学，可以认为public和private是一样的）<br>max-age=xxx:   缓存的内容将在 xxx 秒后失效<br>no-cache:          需要使用对比缓存来验证缓存数据（后面介绍）<br>no-store:           所有内容都不会缓存，强制缓存，对比缓存都不会触发（对于前端开发来说，缓存越多越好，so…基本上和它说886）</p><p>举个板栗</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/QcFSkFh.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>图中Cache-Control仅指定了max-age，所以默认为private，缓存时间为31536000秒（365天）<br>也就是说，在365天内再次请求这条数据，都会直接获取缓存数据库中的数据，直接使用。</p><p>#对比缓存</p><p>对比缓存，顾名思义，需要进行比较判断是否可以使用缓存。<br>浏览器第一次请求数据时，服务器会将缓存标识与数据一起返回给客户端，客户端将二者备份至缓存数据库中。<br>再次请求数据时，客户端将备份的缓存标识发送给服务器，服务器根据缓存标识进行判断，判断成功后，返回304状态码，通知客户端比较成功，可以使用缓存数据。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/AHaOmKc.jpg" alt="对比缓存例子" title>                </div>                <div class="image-caption">对比缓存例子</div>            </figure><p>通过两图的对比，我们可以很清楚的发现，在对比缓存生效时，状态码为304，并且报文大小和请求时间大大减少。<br>原因是，服务端在进行标识比较后，只返回header部分，通过状态码通知客户端使用缓存，不再需要将报文主体部分返回给客户端。</p><p>对于对比缓存来说，缓存标识的传递是我们着重需要理解的，它在请求header和响应header间进行传递，<br>一共分为两种标识传递，接下来，我们分开介绍。</p><p>Last-Modified  /  If-Modified-Since<br>Last-Modified：<br>服务器在响应请求时，告诉浏览器资源的最后修改时间。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/vAkWTGm.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>If-Modified-Since：<br>再次请求服务器时，通过此字段通知服务器上次请求时，服务器返回的资源最后修改时间。<br>服务器收到请求后发现有头If-Modified-Since 则与被请求资源的最后修改时间进行比对。<br>若资源的最后修改时间大于If-Modified-Since，说明资源又被改动过，则响应整片资源内容，返回状态码200；<br>若资源的最后修改时间小于或等于If-Modified-Since，说明资源无新修改，则响应HTTP 304，告知浏览器继续使用所保存的cache。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/PAWlu7E.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>Etag  /  If-None-Match（优先级高于Last-Modified  /  If-Modified-Since）<br>Etag：<br>服务器响应请求时，告诉浏览器当前资源在服务器的唯一标识（生成规则由服务器决定）。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/5b1Gu7g.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>If-None-Match：<br>再次请求服务器时，通过此字段通知服务器客户段缓存数据的唯一标识。<br>服务器收到请求后发现有头If-None-Match 则与被请求资源的唯一标识进行比对，<br>不同，说明资源又被改动过，则响应整片资源内容，返回状态码200；<br>相同，说明资源无新修改，则响应HTTP 304，告知浏览器继续使用所保存的cache。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/nlPYhkl.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>总结<br>对于强制缓存，服务器通知浏览器一个缓存时间，在缓存时间内，下次请求，直接用缓存，不在时间内，执行比较缓存策略。<br>对于比较缓存，将缓存信息中的Etag和Last-Modified通过请求发送给服务器，由服务器校验，返回304状态码时，浏览器直接使用缓存。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/d4g5D0V.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/eY0P01H.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;HTTP报文就是浏览器和服务器间通信时发送及响应的数据块。
浏览器向服务器请求数据，发送请求(request)报文；服务器向浏览器返回数据，返回响应(response)报文。
报文信息主要分为两部分
1.包含属性的首部(header)---
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/25/%E7%9B%92%E6%A8%A1%E5%9E%8B/"/>
    <id>http://yoursite.com/2019/03/25/盒模型/</id>
    <published>2019-03-25T13:57:40.452Z</published>
    <updated>2019-03-19T12:37:11.955Z</updated>
    
    <content type="html"><![CDATA[<p>@<a href="这里写自定义目录标题">TOC</a></p><h2 id="盒模型概念"><a href="#盒模型概念" class="headerlink" title="盒模型概念"></a>盒模型概念</h2><pre><code>所谓盒子模型就是把HTML页面中的元素看作是一个矩形的盒子，也就是一个盛装内容的容器。每个矩形都由元素的内容、内边距（padding）、边框（border）和外边距（margin）组成。</code></pre><p>（1）CSS盒模型和IE盒模型的区别：</p><pre><code>1. 在标准盒模型中，width和height指的是内容区域和高度。增加内边距和外边距不会影响内容区域的尺寸，但是会增加元素框的总尺寸。2. IE盒模型中，width和height指的是内容区域+border+padding的宽度和高度。 </code></pre><p><img src="https://i.imgur.com/B5qc2nb.jpg" alt="标准盒模型"></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/iduzhy7.jpg" alt="IE盒模型" title>                </div>                <div class="image-caption">IE盒模型</div>            </figure><p>（2）CSS如何设置这两种模型</p><pre><code>/*设置当前盒子为 标准模型(默认)*/box-sizing:content-box;/*设置当前盒子为 IE模型*/box-sizing:border-box;</code></pre><p>（3）JS如何设置，获取盒模型对应的宽和高</p><pre><code>/*方式一：通过DOM节点的style样式获取*/element.style.width/height;</code></pre><p>缺点：通过这种方式，只能获得<strong>行内样式</strong>，不能获得<strong>内嵌样式</strong>和<strong>外链样式</strong></p><pre><code>/*方式二：IE独有*/element.currentStyle.width/height;</code></pre><p>可以获取（三种css样式都可以）。但是这种方式只有IE独有。</p><pre><code>/*方式三：通用型*/window.getComputedStyle(element).width/height;</code></pre><p>可兼容Chrome，firefox浏览器</p><pre><code>/*方式四：*/element.getBoundingClientRect().width/height;</code></pre><p>此API的作用：获取一个元素的绝对位置。绝对位置是视窗viewport左上角的绝对位置。<br>此API可以拿到四个属性：left,top,width,height.</p><p>(4)margin塌陷/margin重叠问题</p><p>标准文档流汇总，竖直方向的margin不重叠，只取较大的值作为margin（水平方向的margin是可以叠加的，即水平方向没有塌陷现象）</p><pre><code>父子布局：&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;title&gt;test&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        *{            margin: 0;            padding:0;        }        .father{            background-color: green;        }        .son{            height: 100px;            width: 100px;            margin-top:10px;            background-color: skyblue;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;father&quot;&gt;        &lt;div class=&quot;son&quot;&gt;&lt;/div&gt;    &lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><img src="https://i.imgur.com/GLu45fe.jpg" alt="father"></p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/zXcVcMH.jpg" alt="son" title>                </div>                <div class="image-caption">son</div>            </figure><p>son的height是100px,margin-top是10px，结果height是100px;<br>fatherdheight是100px,而不是110px，因为son和father在竖直方向上公用一个matgin-top.</p><pre><code>技巧：善用父亲的padding,而不是儿子的margin.</code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/ebJrzx6.jpg" alt="父亲margin的问题" title>                </div>                <div class="image-caption">父亲margin的问题</div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/Bn4IEty.jpg" alt="border解决问题" title>                </div>                <div class="image-caption">border解决问题</div>            </figure><pre><code>兄弟布局：&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;    &lt;meta charset=&quot;utf-8&quot;&gt;    &lt;title&gt;test&lt;/title&gt;    &lt;style type=&quot;text/css&quot;&gt;        .div1{            height: 100px;            width: 100px;            background-color: green;            margin-bottom: 50px;        }        .div2{            height: 100px;            width: 100px;            background-color: skyblue;            margin-bottom: 30px;        }    &lt;/style&gt;&lt;/head&gt;&lt;body&gt;    &lt;div class=&quot;div1&quot;&gt;&lt;/div&gt;    &lt;div class=&quot;div2&quot;&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;</code></pre><p><img src="https://i.imgur.com/q7MF7kV.jpg" alt="body"></p><p>div1,div2的宽高一致，都是100<em>100，div1的margin-bottom为50px，div2的margin-bottom为30px，body的大小为250</em>1333。所以，竖直方向的margin不叠加，以较大的为准。</p><p>#BFC解决外边距重叠</p><p>BFC:块级格式化上下文。可以理解为一个独立的区域。<br>BFC的原理：</p><ul><li>BFC里面的元素，在垂直方向，边距会发生重叠。</li><li>BFC在页面中是独立的容器，外面的元素不会影响里面的元素，反之亦然。</li><li>BFC区域不与旁边的float box区域重叠，</li><li>计算BFC的高度时，浮动的子元素也参与计算。</li></ul><p>如何生成BFC</p><pre><code>方式一：overflow:不为visible,可以让属性是hidden,auto.方式二：浮动中：float的属性不为none.意思是只要创建了浮动，当前元素就创建了BFC.方式三：定位中：只要position的值不是static或relative即可。可以是absolute或fixed，也就生成了FC.方式四：display为inline-block,table-cell,table-caption,flex,inline-flex</code></pre><p><strong>边框</strong></p><pre><code>border : border-width || border-style || border-color </code></pre><p><strong>定位</strong><br><strong>display</strong><br><strong>IFC和BFC的问题</strong></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;@&lt;a href=&quot;这里写自定义目录标题&quot;&gt;TOC&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;盒模型概念&quot;&gt;&lt;a href=&quot;#盒模型概念&quot; class=&quot;headerlink&quot; title=&quot;盒模型概念&quot;&gt;&lt;/a&gt;盒模型概念&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;所谓盒子模型就是把HTML
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/25/%E6%B5%AE%E5%8A%A8%E4%B8%8E%E5%AE%9A%E4%BD%8D/"/>
    <id>http://yoursite.com/2019/03/25/浮动与定位/</id>
    <published>2019-03-25T13:57:40.436Z</published>
    <updated>2019-03-19T13:26:27.971Z</updated>
    
    <content type="html"><![CDATA[<h1 id="浮动-float"><a href="#浮动-float" class="headerlink" title="浮动(float)"></a>浮动(float)</h1><p> <strong>普通流</strong>(normal flow)</p><pre><code>CSS的定位机制有3种：普通流（标准流）、浮动和定位。</code></pre><p>html语言当中另外一个相当重要的概念———-标准流！或者普通流。普通流实际上就是一个网页内标签元素正常从上到下，从左到右排列顺序的意思，比如块级元素会独占一行，行内元素会按顺序依次前后排列；按照这种大前提的布局排列之下绝对不会出现例外的情况叫做普通流布局。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/gQ3G8rF.jpg" alt="浮动" title>                </div>                <div class="image-caption">浮动</div>            </figure><p>浮动最早是用来控制图片，以便达到其他元素（特别是文字）实现“环绕”图片的效果。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/gRJEpJL.png" alt="浮动" title>                </div>                <div class="image-caption">浮动</div>            </figure><h2 id="什么是浮动？"><a href="#什么是浮动？" class="headerlink" title="什么是浮动？"></a>什么是浮动？</h2><p>元素的浮动是指设置了浮动属性的元素会脱离标准普通流的控制，移动到其父元素中指定位置的过程。</p><p>在CSS中，通过float属性来定义浮动，其基本语法格式如下：</p><pre><code>选择器{float:属性值;}| 属性值   | 描述         || ----- | ---------- || left  | 元素向左浮动     || right | 元素向右浮动     || none  | 元素不浮动（默认值） |</code></pre><h2 id="浮动详细内幕特性"><a href="#浮动详细内幕特性" class="headerlink" title="浮动详细内幕特性"></a>浮动详细内幕特性</h2><p>浮动脱离标准流，不占位置，会影响标准流。浮动只有左右浮动。</p><pre><code>浮动首先创建包含块的概念（包裹）。就是说，浮动的元素总是找理它最近的父级元素对齐。但是不会超出内边距的范围。 </code></pre><p><img src="https://i.imgur.com/28zGc8P.jpg" alt></p><pre><code>浮动的元素排列位置，跟上一个元素（块级）有关系。如果上一个元素有浮动，则A元素顶部会和上一个元素的顶部对齐；如果上一个元素是标准流，则A元素的顶部会和上一个元素的底部对齐。</code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/sjTJ53y.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><pre><code>由2可以推断出，一个父盒子里面的子盒子，如果其中一个子级有浮动的，则其他子级都需要浮动。这样才能一行对齐显示。元素添加浮动后，元素会具有行内块元素的特性。元素的大小完全取决于定义的大小或者默认的内容多少浮动根据元素书写的位置来显示相应的浮动。</code></pre><p><strong>总结</strong>：  浮动 —&gt;    </p><pre><code>浮动的目的就是为了让多个块级元素同一行上显示。float      浮 漏 特       浮：    加了浮动的元素盒子是浮起来的，漂浮在其他的标准流盒子上面。漏：    加了浮动的盒子，不占位置的，它浮起来了，它原来的位置漏 给了标准流的盒子。特：    特别注意，首先浮动的盒子需要和标准流的父级搭配使用， 其次 特别的注意浮动可以使元素显示模式体现为行内块特性。</code></pre><h1 id="版心和布局流程"><a href="#版心和布局流程" class="headerlink" title="版心和布局流程"></a>版心和布局流程</h1><p>阅读报纸时容易发现，虽然报纸中的内容很多，但是经过合理地排版，版面依然清晰、易读。同样，在制作网页时，要想使页面结构清晰、有条理，也需要对网页进行“排版”。</p><p>“版心”(可视区) 是指网页中主体内容所在的区域。一般在浏览器窗口中水平居中显示，常见的宽度值为960px、980px、1000px、1200px等。</p><h2 id="布局流程"><a href="#布局流程" class="headerlink" title="布局流程"></a>布局流程</h2><pre><code>为了提高网页制作的效率，布局时通常需要遵守一定的布局流程，具体如下：1、确定页面的版心（可视区）。2、分析页面中的行模块，以及每个行模块中的列模块。3、制作HTML结构 。4、CSS初始化，然后开始运用盒子模型的原理，通过DIV+CSS布局来控制网页的各个模块。</code></pre><h2 id="一列固定宽度且居中"><a href="#一列固定宽度且居中" class="headerlink" title="一列固定宽度且居中"></a>一列固定宽度且居中</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/o2Qh2Rb.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>最普通的，最为常用的结构</p><h2 id="两列左窄右宽型"><a href="#两列左窄右宽型" class="headerlink" title="两列左窄右宽型"></a>两列左窄右宽型</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/tVsdJwh.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>比如小米    <a href="http://www.mi.com" target="_blank"> 小米官网 </a></p><h2 id="通栏平均分布型"><a href="#通栏平均分布型" class="headerlink" title="通栏平均分布型"></a>通栏平均分布型</h2><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/E2OgSqB.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p>比如锤子    <a href="http://www.smartisan.com/" target="_blank"> 锤子官网 </a></p><h1 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h1><h2 id="为什么要清除浮动"><a href="#为什么要清除浮动" class="headerlink" title="为什么要清除浮动"></a>为什么要清除浮动</h2><p>我们前面说过，浮动本质是用来做一些文字混排效果的，但是被我们拿来做布局用，则会有很多的问题出现， 但是，你不能说浮动不好 </p><p>由于浮动元素不再占用原文档流的位置，所以它会对后面的元素排版产生影响，为了解决这些问题，此时就需要在该元素中清除浮动。</p><p>准确地说，并不是清除浮动，而是<strong>清除浮动后造成的影响</strong></p><h2 id="清除浮动本质"><a href="#清除浮动本质" class="headerlink" title="清除浮动本质"></a>清除浮动本质</h2><p>清除浮动主要为了解决父级元素因为子级浮动引起内部高度为0 的问题。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/aCqskNn.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/vKNpx9D.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><p><img src="/2019/03/25/浮动与定位/media/kc.jpg"></p><h2 id="清除浮动的方法"><a href="#清除浮动的方法" class="headerlink" title="清除浮动的方法"></a>清除浮动的方法</h2><p>其实本质叫做闭合浮动更好一些, 记住，清除浮动就是把浮动的盒子圈到里面，让父盒子闭合出口和入口不让他们出来影响其他元素。</p><p>在CSS中，clear属性用于清除浮动，其基本语法格式如下：<br>    选择器{clear:属性值;}</p><pre><code>| 属性值   | 描述                    || ----- | --------------------- || left  | 不允许左侧有浮动元素（清除左侧浮动的影响） || right | 不允许右侧有浮动元素（清除右侧浮动的影响） || both  | 同时清除左右两侧浮动的影响         |</code></pre><h3 id="方法一：额外标签法"><a href="#方法一：额外标签法" class="headerlink" title="方法一：额外标签法"></a>方法一：额外标签法</h3><pre><code>html是W3C推荐的做法是通过在浮动元素末尾添加一个空的标签例如 &lt;div style=”clear:both”&gt;&lt;/div&gt;，或则其他标签br等亦可。优点： 通俗易懂，书写方便缺点： 添加许多无意义的标签，结构化较差。  我只能说，w3c你推荐的方法我不接受，你不值得拥有。。。</code></pre><h3 id="方法二：父级添加overflow属性方法"><a href="#方法二：父级添加overflow属性方法" class="headerlink" title="方法二：父级添加overflow属性方法"></a>方法二：父级添加overflow属性方法</h3><pre><code>可以通过触发BFC的方式，可以实现清除浮动效果。（BFC后面讲解）css可以给父级添加： overflow为 hidden|auto|scroll  都可以实现。优点：  代码简洁缺点：  内容增多时候容易造成不会自动换行导致内容被隐藏掉，无法显示需要溢出的元素。</code></pre><h3 id="方法三：使用after伪元素清除浮动"><a href="#方法三：使用after伪元素清除浮动" class="headerlink" title="方法三：使用after伪元素清除浮动"></a>方法三：使用after伪元素清除浮动</h3><p><strong>:after 方式为空元素的升级版，好处是不用单独加标签了</strong> </p><pre><code>使用方法：css .clearfix:after {  content: &quot;.&quot;; display: block; height: 0; clear: both; visibility: hidden;  }    .clearfix {*zoom: 1;}   /* IE6、7 专有 */优点： 符合闭合浮动思想  结构语义化正确缺点： 由于IE6-7不支持:after，使用 zoom:1触发 hasLayout。代表网站： 百度、淘宝网、网易等</code></pre><p><img src="/2019/03/25/浮动与定位/media/163.png" style="border: 1px dashed #3c3c3c;"></p><p>注意： content:”.”  里面尽量跟一个小点，或者其他，尽量不要为空，否则再firefox 7.0前的版本会有生成空格。</p><h3 id="方法四：使用before和after双伪元素清除浮动"><a href="#方法四：使用before和after双伪元素清除浮动" class="headerlink" title="方法四：使用before和after双伪元素清除浮动"></a>方法四：使用before和after双伪元素清除浮动</h3><pre><code>使用方法：css.clearfix:before,.clearfix:after {   content:&quot;&quot;;  display:table;  /* 这句话可以出发BFC BFC可以清除浮动,BFC我们后面讲 */}.clearfix:after { clear:both;}.clearfix {  *zoom:1;}优点：  代码更简洁缺点：  由于IE6-7不支持:after，使用 zoom:1触发 hasLayout。</code></pre><p>代表网站： 小米、腾讯等</p><h1 id="定位-position"><a href="#定位-position" class="headerlink" title="定位(position)"></a>定位(position)</h1><p>如果，说浮动， 关键在一个 “浮” 字上面， 那么 我们的定位，关键在于一个 “位” 上。</p><h2 id="元素的定位属性"><a href="#元素的定位属性" class="headerlink" title="元素的定位属性"></a>元素的定位属性</h2><p>元素的定位属性主要包括定位模式和边偏移两部分。</p><pre><code>1、边偏移| 边偏移属性  | 描述                      || ------ | ----------------------- || top    | 顶端偏移量，定义元素相对于其父元素上边线的距离 || bottom | 底部偏移量，定义元素相对于其父元素下边线的距离 || left   | 左侧偏移量，定义元素相对于其父元素左边线的距离 || right  | 右侧偏移量，定义元素相对于其父元素右边线的距离 |</code></pre><p>也就说，以后定位要和这边偏移搭配使用了， 比如 top: 100px;  left: 30px; 等等</p><p>2、定位模式</p><p>在CSS中，position属性用于定义元素的定位模式，其基本语法格式如下：</p><pre><code>选择器{position:属性值;}position属性的常用值| 值        | 描述                       || -------- | ------------------------ || static   | 自动定位（默认定位方式）             || relative | 相对定位，相对于其原文档流的位置进行定位     || absolute | 绝对定位，相对于其上一个已经定位的父元素进行定位 || fixed    | 固定定位，相对于浏览器窗口进行定位        |</code></pre><h2 id="静态定位-static"><a href="#静态定位-static" class="headerlink" title="静态定位(static)"></a>静态定位(static)</h2><pre><code>静态定位是所有元素的默认定位方式，当position属性的取值为static时，可以将元素定位于静态位置。 所谓静态位置就是各个元素在HTML文档流中默认的位置。</code></pre><p>上面的话翻译成白话：  就是网页中所有元素都默认的是静态定位哦！ 其实就是标准流的特性。</p><p>在静态定位状态下，无法通过边偏移属性（top、bottom、left或right）来改变元素的位置。</p><h2 id="相对定位relative-自恋型"><a href="#相对定位relative-自恋型" class="headerlink" title="相对定位relative(自恋型)"></a>相对定位relative(自恋型)</h2><pre><code>相对定位是将元素相对于它在标准流中的位置进行定位，当position属性的取值为relative时，可以将元素定位于相对位置。对元素设置相对定位后，可以通过边偏移属性改变元素的位置，但是它在文档流中的位置仍然保留。如下图所示，即是一个相对定位的效果展示：</code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/SNjT2a7.png" alt title>                </div>                <div class="image-caption"></div>            </figure><p>注意：    相对定位最重要的一点是，它可以通过边偏移移动位置，但是原来的所占的位置，继续占有。</p><p>就是说，相对定位的盒子仍在标准流中，它后面的盒子仍以标准流方式对待它。</p><h2 id="绝对定位absolute-拼爹型"><a href="#绝对定位absolute-拼爹型" class="headerlink" title="绝对定位absolute (拼爹型)"></a>绝对定位absolute (拼爹型)</h2><pre><code>[注意] 如果文档可滚动，绝对定位元素会随着它滚动，因为元素最终会相对于正常流的某一部分定位。当position属性的取值为absolute时，可以将元素的定位模式设置为绝对定位。</code></pre><p>注意：    绝对定位最重要的一点是，它可以通过边偏移移动位置，但是它完全脱标，完全不占位置。</p><h3 id="父级没有定位"><a href="#父级没有定位" class="headerlink" title="父级没有定位"></a>父级没有定位</h3><p>若所有父元素都没有定位，以浏览器为准对齐(document文档)。</p><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/kgorGYM.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="父级有定位"><a href="#父级有定位" class="headerlink" title="父级有定位"></a>父级有定位</h3><p>绝对定位是将元素依据最近的已经定位（绝对、固定或相对定位）的父元素（祖先）进行定位。 </p><p><img src="https://i.imgur.com/B9P5VgC.png" alt></p><h3 id="绝对定位的盒子没有边偏移"><a href="#绝对定位的盒子没有边偏移" class="headerlink" title="绝对定位的盒子没有边偏移"></a>绝对定位的盒子没有边偏移</h3><pre><code>如果只是给盒子指定了 定位，但是没有给与边偏移，则改盒子以标准流来显示排序，和上一个盒子的底边对齐，但是不占有位置。</code></pre><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://i.imgur.com/eEpMGco.png" alt title>                </div>                <div class="image-caption"></div>            </figure><h3 id="子绝父相"><a href="#子绝父相" class="headerlink" title="子绝父相"></a>子绝父相</h3><p>这句话的意思是 子级是绝对定位的话， 父级要用相对定位。</p><pre><code>首先， 我们说下， 绝对定位是将元素依据最近的已经定位绝对、固定或相对定位）的父元素（祖先）进行定位。就是说， 子级是绝对定位，父亲只要是定位即可（不管父亲是绝对定位还是相对定位，甚至是固定定位都可以），就是说， 子绝父绝，子绝父相都是正确的。所以，我们可以得出如下结论：因为子级是绝对定位，不会占有位置， 可以放到父盒子里面的任何一个地方。父盒子布局时，需要占有位置，因此父亲只能是 相对定位. 这就是子绝父相的由来。</code></pre><h2 id="固定定位fixed-认死理型"><a href="#固定定位fixed-认死理型" class="headerlink" title="固定定位fixed(认死理型)"></a>固定定位fixed(认死理型)</h2><pre><code>固定定位是绝对定位的一种特殊形式，它以浏览器窗口作为参照物来定义网页元素。当position属性的取值为fixed时，即可将元素的定位模式设置为固定定位。</code></pre><p>当对元素设置固定定位后，它将脱离标准文档流的控制，始终依据浏览器窗口来定义自己的显示位置。不管浏览器滚动条如何滚动也不管浏览器窗口的大小如何变化，该元素都会始终显示在浏览器窗口的固定位置。</p><pre><code>固定定位有两点：1. 固定定位的元素跟父亲没有任何关系，只认浏览器。2. 固定定位完全脱标，不占有位置，不随着滚动条滚动。</code></pre><p>记忆法：  就类似于孙猴子， 无父无母，好不容易找到一个可靠的师傅（浏览器），就听的师傅的，别的都不听。</p><p>ie6等低版本浏览器不支持固定定位。</p><h2 id="叠放次序（z-index）"><a href="#叠放次序（z-index）" class="headerlink" title="叠放次序（z-index）"></a>叠放次序（z-index）</h2><p>当对多个元素同时设置定位时，定位元素之间有可能会发生重叠。</p><p>在CSS中，要想调整重叠定位元素的堆叠顺序，可以对定位元素应用z-index层叠等级属性，其取值可为正整数、负整数和0。</p><p>比如：  z-index: 2;</p><pre><code>注意：1. z-index的默认属性值是0，取值越大，定位元素在层叠元素中越居上。2. 如果取值相同，则根据书写顺序，后来居上。3. 后面数字一定不能加单位。4. 只有相对定位，绝对定位，固定定位有此属性，其余标准流，浮动，静态定位都无此属性，亦不可指定此属性。</code></pre><h1 id="四种定位总结"><a href="#四种定位总结" class="headerlink" title="四种定位总结"></a>四种定位总结</h1><pre><code>| 定位模式         | 是否脱标占有位置   | 是否可以使用边偏移 | 移动位置基准      || ------------ | ---------- | --------- | ----------- || 静态static     | 不脱标，正常模式   | 不可以       | 正常模式        || 相对定位relative | 不脱标，占有位置   | 可以        | 相对自身位置移动    || 绝对定位absolute | 完全脱标，不占有位置 | 可以        | 相对于定位父级移动位置 || 固定定位fixed    | 完全脱标，不占有位置 | 可以        | 相对于浏览器移动位置  |</code></pre><h1 id="定位模式转换"><a href="#定位模式转换" class="headerlink" title="定位模式转换"></a>定位模式转换</h1><pre><code>跟 浮动一样， 元素添加了 绝对定位和固定定位之后， 元素模式也会发生转换， 都转换为 行内块模式， 因此 比如 行内元素 如果添加了 绝对定位或者 固定定位后，可以不用转换模式，直接给高度和宽度就可以了。</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;浮动-float&quot;&gt;&lt;a href=&quot;#浮动-float&quot; class=&quot;headerlink&quot; title=&quot;浮动(float)&quot;&gt;&lt;/a&gt;浮动(float)&lt;/h1&gt;&lt;p&gt; &lt;strong&gt;普通流&lt;/strong&gt;(normal flow)&lt;/p&gt;
&lt;pre&gt;
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>WEB API</title>
    <link href="http://yoursite.com/2019/03/25/Web%20API/"/>
    <id>http://yoursite.com/2019/03/25/Web API/</id>
    <published>2019-03-25T13:57:40.428Z</published>
    <updated>2019-03-18T08:52:59.925Z</updated>
    
    <content type="html"><![CDATA[<h2 id="DOM树"><a href="#DOM树" class="headerlink" title="DOM树"></a>DOM树</h2><pre><code>核心DOM和HTML DOM核心DOM：操作一切结构化文档的统一API特点：繁琐！万能！HTML DOM:专门操作HTML文档的简化版DOM API特点：简洁，不是万能！节点对象：Node三大属性：nodeType、nodeName、nodeValue</code></pre><h3 id="DOM-查找"><a href="#DOM-查找" class="headerlink" title="DOM:查找"></a>DOM:查找</h3><pre><code>方式一：不要查找直接获得元素html document.documentElementhead document.headbody document.body方式二：按节点间关系查找1.父子关系elem.parentNode    获得elem的父节点elem.childNodes 获得elem的所有**直接**子节点elem.firstChild 获得elem下的第一个子节点elem.lastChild  获得elem下的最后一个子节点2.兄弟节点elem.previousSibling 获得elem的前一个兄弟节点elem.nextSibling 获得elem的后一个兄弟节点</code></pre><p><strong>存在的问题：</strong></p><ul><li>一切文本都是节点对象，包括看不见的空字符（tab,空格，换行）</li></ul><p><strong>解决：元素树</strong></p><pre><code>方式三：元素树1.父子关系elem.parentElement 获得elem的父元素elem.children 获得elem的所有**直接**子元素elem.firstElementChild 获取elem下的第一个子元素elem.lastElementChild 获得elem下的最后一个子元素2.兄弟关系elem.previousElementSibling 获得elem的前一个兄弟元素elem.nextElementSibling 获得elem的后一个兄弟元素元素树不是一颗新树，只是节点树的一个子集</code></pre><p><strong>存在问题：</strong></p><ul><li>只适合IE9+的浏览器</li><li>children和childNodes只能查找直接子节点，无法查找更深层次</li></ul><p><strong>解决：</strong></p><pre><code>1.递归遍历缺点：反复访问集合，导致反复查找DOM树，效率低解决2：节点迭代器方法四：按HTML查找1.按id查找var elem = document.getElementById(&quot;ID名&quot;);2.按标签名查找var elems = parent.getElementsByTagName(&quot;标签名&quot;);可查找所有后代元素3.按name属性查找var elems = document.getElementsByName(&quot;name&quot;);4.按class属性查找var elems = parent.getElementsByClassName(&quot;class&quot;);适用于：一个元素被多个class修饰。在所有后代中查找</code></pre><p><strong>问题：</strong>每次只能按一种条件查找，当查找条件复杂时，步骤就非常繁琐。</p><p><strong>解决：</strong>用选择器查找</p><pre><code>1.仅查找一个元素var elem = parent.querySelector(&quot;选择器&quot;);2.查找多个元素var elems = parent.querySelectorAll(&quot;选择器&quot;);返回非动态集合。但是存在浏览器兼容性的问题。非动态集合：实际存储完整数据，即使反复访问集合，也不会反复查找DOM树</code></pre><h3 id="DOM-修改"><a href="#DOM-修改" class="headerlink" title="DOM:修改"></a>DOM:修改</h3><p>修改分为修改内容，属性，样式三种。</p><pre><code>1.内容- 获取或修改元素的HTML代码片段内容elem.innerHTML-2.获取或修改元素的纯文文本内容elem.textContent(与innerHTML相比，去掉了内嵌标签，将转义字符翻译为原文)-获取或修改表单元素的值elem.value 2.属性- 核心DOM:属性节点都保存在elem的attributes集合中var node = elem.attributes[&quot;属性名&quot;];var value = node.nodeValue;获取：var value = elem.getAttribute(&quot;属性名&quot;);修改：elem.setAttribute(&quot;属性名&quot;,&quot;值&quot;);移除：elem.removeAttribute(&quot;属性名&quot;);判断有没有：var bool = elem.hasAttribute(&quot;属性名&quot;);  可以直接使用：class- HTML DOM:获取：elem.属性名修改：elem.属性名=值移除：elem.属性名 = &quot;&quot;判断有没有：elem.属性名！==&quot;&quot;.className ===》 就是HTML中的class状态属性：disabled selected checked    特点：值是bool类型不能用核心DOM类型，只能用HTML DOM类型- 自定义扩展属性：定义：data-属性名=&quot;值&quot;获取：核心DOM        HTML5:elem.dataset.属性名只要标识多个元素，且不希望人为或是被程序修改只要给元素添加行为时，查找元素都用自定义扩展属性- 样式1.内联样式特点：优先级最高，当前元素独有- 修改一个内联样式elem.style.css属性 = 值所有css属性要去横线变驼峰-批量替换内联样式elem.style.cssText =&quot;&quot;;2.获得计算后的样式(最终应用到当前元素上的所有样式的合集，一个元素的完整样式，可能来源多个地方)//获得计算后的style对象var style = getComputedStyle(elem);//获得style中的css属性值var value = style.css属性3.修改样式中的样式：//获得样式表对象var sheet = document.styleSheets[i];//获得样式表对象中的一套规则：var rule = sheet.cssRules[i];//修改样式var style = rule.style;style.css属性 = 值</code></pre><h3 id="DOM-添加和删除"><a href="#DOM-添加和删除" class="headerlink" title="DOM:添加和删除"></a>DOM:添加和删除</h3><pre><code>//1.创建空元素var a = document.creatElement(&quot;a&quot;);//设置关键属性a.href = &quot;http://baidu.com&quot;;a.innerHTML=&quot;go to baidu&quot;;//3.将新元素添加到DOM树末尾追加：parent.appendChild(a);中间插入：parent.insertBefore(a,child);替换：parent.replace(a,child);</code></pre><p><strong>总结</strong>：尽量减少操作DOM树的次数<br>    每次操作DOM树都会导致重新layout</p><pre><code>![layout](https://i.imgur.com/htVxk7k.jpg)只要修改DOM树(修改样式，修改位置，添加删除元素等)都会导致重新layout---效率低解决：如果同时添加父元素和子元素，都要先在内存中将子元素，添加到父元素中，最后再将父元素，一次性添加到DOM树。或是父元素已经在DOM树上了，要同时添加多个平级子元素时：文档片段：内存中，临时存储一课DOM子树段的存储空间//创建文档片段对象var frag = document.creatDocumentFragment();//先将子元素添加到DOM树指定父元素下frag.appendChild(child);//将文档片段一次性添加到DOM树指定父元素下parent.appendChild(frag);frag将子元素送到DOM树后，自动释放。</code></pre><p> <strong>HTML DOM常用对象: </strong></p><pre><code> 什么是: 对常用的元素，提供了简化版的API 优: 简化 缺: 不是万能 Image: 创建:  var img=new Image(); Select:   属性: .selectedIndex 快速获得当前选中项的下标位置       .value 当选中项有value属性时，会返回option的value             如果选中项没有value属性，则用内容代替       .options: 获得select下所有option元素对象的集合         options.length 获得选项的个数       .length =&gt; .options.length         固定套路: 清空所有option           sel.innerHTML=&quot;&quot;;           sel.length=0; =&gt;sel.options.length=0;  方法: add(option) 代替 appendChild(option)        问题: 不支持frag       remove(i) 移除i位置的option Option:  创建: var opt=new Option(text,value);  属性: .index   .text    .value table:管着行分组:   创建: var thead=table.createTHead()       var tbody=table.createTBody();       var tfoot=table.createTFoot();  删除: table.deleteTHead()       table.deleteTFoot()  获取: tabel.tHead   table.tFoot   table.tBodies[i]行分组:管着行:   创建: var tr=行分组.insertRow(i)    固定套路: 1. 在结尾追加一行: 行分组.insertRow()             2. 在开头插入一行: 行分组.insertRow(0)  删除: 行分组.deleteRow(i)    强调: 主语是行分组时，i要求是在行分组内的相对下标位置  获取: 行分组.rows  获得行分组内所有行的集合行:管着格:  创建: var td=tr.insertCell(i)    固定套路: 末尾追加: tr.insertCell()  删除: tr.deleteCell(i)  获取: tr.cells form:   获取: var form=document.forms[i/id/name];  属性: form.elements 获得表单中所有表单元素的值      强调: 表单元素包括: input  select  textarea  button       form.elements.length 获得表单中表单元素的个数       form.length==&gt; form.elements.length        固定套路: 获得结尾的按钮:                 var btn=form.elements[form.length-n]  方法: form.submit() //在程序中手动提交表单 表单元素:   获取: var 表单元素= form.elements[i/id/name]    如果表单元素有name属性，则: form.name属性值  方法: elem.focus() 让当前表单获得焦点         elem.blur()</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;DOM树&quot;&gt;&lt;a href=&quot;#DOM树&quot; class=&quot;headerlink&quot; title=&quot;DOM树&quot;&gt;&lt;/a&gt;DOM树&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;核心DOM和HTML DOM
核心DOM：操作一切结构化文档的统一API
特点：繁琐！万能！

HTML D
      
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2019/03/25/%E5%89%91%E6%8C%87offer(1-6)/"/>
    <id>http://yoursite.com/2019/03/25/剑指offer(1-6)/</id>
    <published>2019-03-25T13:16:05.677Z</published>
    <updated>2019-03-25T13:15:07.492Z</updated>
    
    <content type="html"><![CDATA[<p>@<a href="学习">剑指offer</a></p><h1 id="1-二维数组中的查找"><a href="#1-二维数组中的查找" class="headerlink" title="1. 二维数组中的查找"></a>1. 二维数组中的查找</h1><p>在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p><p><strong>思路</strong></p><pre><code>  [    [1,2,3,4],    [2,3,4,5],    [3,4,5,6],    [4,5,6,7]  ]</code></pre><p>根据这个数组的特点，可以发现：</p><ul><li>（1）每一行，从左到右递增</li><li>（2）每一列，从上到下递增</li></ul><p>那么，我们在选择第一个数与target比较大小，第一个数的选取一定要选择数组中每行每列最后一个数。在这里我选取的是<strong>右上角</strong>的数和target比较。</p><ul><li>(a)如果array[row,col]&gt;target，则向左走，即j–</li><li>(b)如果array[row,col]&lt;target，则向右走，即i++</li></ul><p>参考代码如下：</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Find</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> array<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// write code here</span>     <span class="token keyword">var</span> row <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> col <span class="token operator">=</span> array<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>row<span class="token operator">&lt;=</span>array<span class="token punctuation">.</span>length<span class="token number">-1</span><span class="token operator">&amp;&amp;</span>col<span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>target <span class="token operator">==</span> array<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">true</span>        <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>target<span class="token operator">&lt;</span>array<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token punctuation">)</span>            col<span class="token operator">--</span><span class="token punctuation">;</span>        <span class="token keyword">else</span>            row<span class="token operator">++</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token keyword">var</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">Find</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">//true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="2-替换空格"><a href="#2-替换空格" class="headerlink" title="2.替换空格"></a>2.替换空格</h1><p>请实现一个函数，将一个字符串中的每个空格替换成“%20”。例如，当字符串为We Are Happy.则经过替换之后的字符串为We%20Are%20Happy。</p><p>题目说的不太严谨：</p><ul><li>1.能不能允许连续出现多个空格？</li><li>2.若有可能连续多个空格，用多个还是单个20%进行替换？</li></ul><p>分三种情况解答:<br>1.不会出现连续多个空格：<br>直接用空格将字符串切割成数组，在用20%进行连接。</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">replaceSpace</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'%20'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>2.允许出现多个空格，每个空格均用一个20%替换：<br>用正则表达式找到所有空格依次替换</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">replaceSpace</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/\s/g</span><span class="token punctuation">,</span><span class="token string">'%20'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>3.允许出现多个空格，多个空格用一个20%替换：<br>用正则表达式找到连续空格进行替换</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">replaceSpace</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">return</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex">/\s+/g</span><span class="token punctuation">,</span><span class="token string">'%20'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>方法二：利用split()+join()</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">replaceSpace</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// write code here</span>     <span class="token comment" spellcheck="true">// write code here</span>    <span class="token keyword">let</span> arr <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> newStr <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">'%20'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> newStr<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="3-从尾到头打印链表"><a href="#3-从尾到头打印链表" class="headerlink" title="3.从尾到头打印链表"></a>3.从尾到头打印链表</h1><p>输入一个链表，按链表值从尾到头的顺序返回一个ArrayList。</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">/*function ListNode(x){    this.val = x;    this.next = null;}*/</span><span class="token keyword">function</span> <span class="token function">printListFromTailToHead</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// write code here</span>   <span class="token keyword">var</span> arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> me<span class="token operator">=</span>head<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>me<span class="token punctuation">)</span><span class="token punctuation">{</span>        arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>me<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>        me<span class="token operator">=</span>me<span class="token punctuation">.</span>next<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> arr<span class="token punctuation">.</span><span class="token function">reverse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>方法二：unshift():在数组前添加任意项并返回新数组的长度</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token comment" spellcheck="true">/*function ListNode(x){    this.val = x;    this.next = null;}*/</span><span class="token keyword">function</span> <span class="token function">printListFromTailToHead</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token keyword">var</span> result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>head<span class="token punctuation">)</span><span class="token punctuation">{</span>        result<span class="token punctuation">.</span><span class="token function">unshift</span><span class="token punctuation">(</span>head<span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>        head<span class="token operator">=</span>head<span class="token punctuation">.</span>next<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="4-重建二叉树"><a href="#4-重建二叉树" class="headerlink" title="4.重建二叉树"></a>4.重建二叉树</h1><h1 id="5-用两个栈实现队列"><a href="#5-用两个栈实现队列" class="headerlink" title="5.用两个栈实现队列"></a>5.用两个栈实现队列</h1><p>用两个栈来实现一个队列，完成队列的Push和Pop操作。 队列中的元素为int类型。</p><p><strong>思路</strong>：</p><ul><li>1.整体思路是元素先依次进入栈1，再从栈1依次弹出到栈2，然后弹出栈2顶部的元素，整个过程就是一个队列的先进先出</li><li>2.但是在交换元素的时候需要判断两个栈的元素情况：<br>“进队列时”，队列中是还还有元素，若有，说明栈2中的元素不为空，此时就先将栈2的元素倒回到栈1 中，保持在“进队列状态”。<br>“出队列时”，将栈1的元素全部弹到栈2中，保持在“出队列状态”。<br>所以要做的判断是，进时，栈2是否为空，不为空，则栈2元素倒回到栈1，出时，将栈1元素全部弹到栈2中，直到栈1为空。</li></ul><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="https://img2018.cnblogs.com/blog/1502611/201903/1502611-20190325204459123-970878480.jpg" alt title>                </div>                <div class="image-caption"></div>            </figure><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> stack1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stack2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// write code here</span>    stack1<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">function</span> <span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">// write code here</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>stack2<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>stack1<span class="token punctuation">.</span>length <span class="token operator">===</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">{</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>            <span class="token keyword">var</span> len <span class="token operator">=</span> stack1<span class="token punctuation">.</span>length<span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>len<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>                stack2<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>stack1<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">}</span>            <span class="token keyword">return</span> stack2<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> stack2<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="6-旋转数组的最小数字"><a href="#6-旋转数组的最小数字" class="headerlink" title="6.旋转数组的最小数字"></a>6.旋转数组的最小数字</h1><p>把一个数组最开始的若干个元素搬到数组的末尾，我们称之为数组的旋转。 输入一个非减排序的数组的一个旋转，输出旋转数组的最小元素。 例如数组{3,4,5,1,2}为{1,2,3,4,5}的一个旋转，该数组的最小值为1。 NOTE：给出的所有元素都大于0，若数组大小为0，请返回0。</p><p>剑指Offer中有这道题目的分析。这是一道二分查找的变形的题目。<br>旋转之后的数组实际上可以划分成两个有序的子数组：前面子数组的大小都大于后面子数组中的元素</p><p>注意到实际上最小的元素就是两个子数组的分界线。本题目给出的数组一定程度上是排序的，因此我们试着用二分查找法寻找这个最小的元素。</p><p><strong>思路</strong>：</p><ul><li>（1）我们用两个指针left,right分别指向数组的第一个元素和最后一个元素。按照题目的旋转的规则，第一个元素应该是大于最后一个元素的（没有重复的元素）。<br>但是如果不是旋转，第一个元素肯定小于最后一个元素。</li><li>（2）找到数组的中间元素。<br>中间元素大于第一个元素，则中间元素位于前面的递增子数组，此时最小元素位于中间元素的后面。我们可以让第一个指针left指向中间元素。</li></ul><p>移动之后，第一个指针仍然位于前面的递增数组中。</p><p>中间元素小于第一个元素，则中间元素位于后面的递增子数组，此时最小元素位于中间元素的前面。我们可以让第二个指针right指向中间元素。</p><p>移动之后，第二个指针仍然位于后面的递增数组中。</p><p>这样可以缩小寻找的范围。</p><p>（3）按照以上思路，第一个指针left总是指向前面递增数组的元素，第二个指针right总是指向后面递增的数组元素。</p><p>最终第一个指针将指向前面数组的最后一个元素，第二个指针指向后面数组中的第一个元素。</p><p>也就是说他们将指向两个相邻的元素，而第二个指针指向的刚好是最小的元素，这就是循环的结束条件。</p><p>到目前为止以上思路很耗的解决了没有重复数字的情况，这一道题目添加上了这一要求，有了重复数字。</p><p>因此这一道题目比上一道题目多了些特殊情况：</p><p>我们看一组例子：｛1，0，1，1，1｝ 和 ｛1，1， 1，0，1｝ 都可以看成是递增排序数组｛0，1，1，1，1｝的旋转。</p><p>这种情况下我们无法继续用上一道题目的解法，去解决这道题目。因为在这两个数组中，第一个数字，最后一个数字，中间数字都是1。</p><p>第一种情况下，中间数字位于后面的子数组，第二种情况，中间数字位于前面的子数组。</p><p>也就无法移动指针来缩小查找的范围。</p><h1 id="7-斐波那契数列"><a href="#7-斐波那契数列" class="headerlink" title="7.斐波那契数列"></a>7.斐波那契数列</h1><p>大家都知道斐波那契数列，现在要求输入一个整数n，请你输出斐波那契数列的第n项（从0开始，第0项为0）。</p><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">Fibonacci</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">{</span>      <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">&lt;=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        <span class="token keyword">return</span> n<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token keyword">else</span><span class="token punctuation">{</span>        <span class="token keyword">var</span> f0<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>f1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>   <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">var</span> i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>        f2<span class="token operator">=</span>f0<span class="token operator">+</span>f1<span class="token punctuation">;</span>        f0<span class="token operator">=</span>f1<span class="token punctuation">;</span>        f1<span class="token operator">=</span>f2<span class="token punctuation">;</span>    <span class="token punctuation">}</span>      <span class="token keyword">return</span> f2<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;@&lt;a href=&quot;学习&quot;&gt;剑指offer&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-二维数组中的查找&quot;&gt;&lt;a href=&quot;#1-二维数组中的查找&quot; class=&quot;headerlink&quot; title=&quot;1. 二维数组中的查找&quot;&gt;&lt;/a&gt;1. 二维数组中的查找&lt;/h1&gt;&lt;p&gt;在一个
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
